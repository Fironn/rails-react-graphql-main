Started GET "/" for ::1 at 2023-02-24 04:54:09 +0900
  [1m[35m (0.6ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.5ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime(6) NOT NULL, "updated_at" datetime(6) NOT NULL)[0m
  [1m[36mActiveRecord::SchemaMigration Pluck (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  
ActiveRecord::PendingMigrationError (

Migrations are pending. To resolve this issue, run:

        bin/rails db:migrate RAILS_ENV=development

You have 1 pending migration:

20221219075329_create_books.rb


):
  
activerecord (7.0.4.2) lib/active_record/migration.rb:627:in `check_pending!'
activerecord (7.0.4.2) lib/active_record/migration.rb:592:in `block (2 levels) in call'
activesupport (7.0.4.2) lib/active_support/file_update_checker.rb:83:in `execute'
activerecord (7.0.4.2) lib/active_record/migration.rb:597:in `block in call'
activerecord (7.0.4.2) lib/active_record/migration.rb:589:in `synchronize'
activerecord (7.0.4.2) lib/active_record/migration.rb:589:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/callbacks.rb:27:in `block in call'
activesupport (7.0.4.2) lib/active_support/callbacks.rb:99:in `run_callbacks'
actionpack (7.0.4.2) lib/action_dispatch/middleware/callbacks.rb:26:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/actionable_exceptions.rb:17:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/debug_exceptions.rb:28:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/show_exceptions.rb:26:in `call'
railties (7.0.4.2) lib/rails/rack/logger.rb:40:in `call_app'
railties (7.0.4.2) lib/rails/rack/logger.rb:25:in `block in call'
activesupport (7.0.4.2) lib/active_support/tagged_logging.rb:99:in `block in tagged'
activesupport (7.0.4.2) lib/active_support/tagged_logging.rb:37:in `tagged'
activesupport (7.0.4.2) lib/active_support/tagged_logging.rb:99:in `tagged'
railties (7.0.4.2) lib/rails/rack/logger.rb:25:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/remote_ip.rb:93:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/request_id.rb:26:in `call'
rack (2.2.6.2) lib/rack/runtime.rb:22:in `call'
activesupport (7.0.4.2) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/server_timing.rb:61:in `block in call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/server_timing.rb:26:in `collect_events'
actionpack (7.0.4.2) lib/action_dispatch/middleware/server_timing.rb:60:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/static.rb:23:in `call'
rack (2.2.6.2) lib/rack/sendfile.rb:110:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/host_authorization.rb:137:in `call'
rack-cors (2.0.0) lib/rack/cors.rb:102:in `call'
railties (7.0.4.2) lib/rails/engine.rb:530:in `call'
puma (5.6.5) lib/puma/configuration.rb:252:in `call'
puma (5.6.5) lib/puma/request.rb:77:in `block in handle_request'
puma (5.6.5) lib/puma/thread_pool.rb:340:in `with_force_shutdown'
puma (5.6.5) lib/puma/request.rb:76:in `handle_request'
puma (5.6.5) lib/puma/server.rb:443:in `process_client'
puma (5.6.5) lib/puma/thread_pool.rb:147:in `block in spawn_thread'
Started GET "/graphiql" for ::1 at 2023-02-24 04:55:18 +0900
  [1m[36mActiveRecord::SchemaMigration Pluck (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mCACHE ActiveRecord::SchemaMigration Pluck (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  
ActiveRecord::PendingMigrationError (

Migrations are pending. To resolve this issue, run:

        bin/rails db:migrate RAILS_ENV=development

You have 1 pending migration:

20221219075329_create_books.rb


):
  
activerecord (7.0.4.2) lib/active_record/migration.rb:627:in `check_pending!'
activerecord (7.0.4.2) lib/active_record/migration.rb:592:in `block (2 levels) in call'
activesupport (7.0.4.2) lib/active_support/file_update_checker.rb:83:in `execute'
activerecord (7.0.4.2) lib/active_record/migration.rb:597:in `block in call'
activerecord (7.0.4.2) lib/active_record/migration.rb:589:in `synchronize'
activerecord (7.0.4.2) lib/active_record/migration.rb:589:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/callbacks.rb:27:in `block in call'
activesupport (7.0.4.2) lib/active_support/callbacks.rb:99:in `run_callbacks'
actionpack (7.0.4.2) lib/action_dispatch/middleware/callbacks.rb:26:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/actionable_exceptions.rb:17:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/debug_exceptions.rb:28:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/show_exceptions.rb:26:in `call'
railties (7.0.4.2) lib/rails/rack/logger.rb:40:in `call_app'
railties (7.0.4.2) lib/rails/rack/logger.rb:25:in `block in call'
activesupport (7.0.4.2) lib/active_support/tagged_logging.rb:99:in `block in tagged'
activesupport (7.0.4.2) lib/active_support/tagged_logging.rb:37:in `tagged'
activesupport (7.0.4.2) lib/active_support/tagged_logging.rb:99:in `tagged'
railties (7.0.4.2) lib/rails/rack/logger.rb:25:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/remote_ip.rb:93:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/request_id.rb:26:in `call'
rack (2.2.6.2) lib/rack/runtime.rb:22:in `call'
activesupport (7.0.4.2) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/server_timing.rb:61:in `block in call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/server_timing.rb:26:in `collect_events'
actionpack (7.0.4.2) lib/action_dispatch/middleware/server_timing.rb:60:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/static.rb:23:in `call'
rack (2.2.6.2) lib/rack/sendfile.rb:110:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/host_authorization.rb:137:in `call'
rack-cors (2.0.0) lib/rack/cors.rb:102:in `call'
railties (7.0.4.2) lib/rails/engine.rb:530:in `call'
puma (5.6.5) lib/puma/configuration.rb:252:in `call'
puma (5.6.5) lib/puma/request.rb:77:in `block in handle_request'
puma (5.6.5) lib/puma/thread_pool.rb:340:in `with_force_shutdown'
puma (5.6.5) lib/puma/request.rb:76:in `handle_request'
puma (5.6.5) lib/puma/server.rb:443:in `process_client'
puma (5.6.5) lib/puma/thread_pool.rb:147:in `block in spawn_thread'
Started GET "/graphiql" for ::1 at 2023-02-24 04:55:24 +0900
  [1m[36mActiveRecord::SchemaMigration Pluck (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mCACHE ActiveRecord::SchemaMigration Pluck (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  
ActiveRecord::PendingMigrationError (

Migrations are pending. To resolve this issue, run:

        bin/rails db:migrate RAILS_ENV=development

You have 1 pending migration:

20221219075329_create_books.rb


):
  
activerecord (7.0.4.2) lib/active_record/migration.rb:627:in `check_pending!'
activerecord (7.0.4.2) lib/active_record/migration.rb:592:in `block (2 levels) in call'
activesupport (7.0.4.2) lib/active_support/file_update_checker.rb:83:in `execute'
activerecord (7.0.4.2) lib/active_record/migration.rb:597:in `block in call'
activerecord (7.0.4.2) lib/active_record/migration.rb:589:in `synchronize'
activerecord (7.0.4.2) lib/active_record/migration.rb:589:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/callbacks.rb:27:in `block in call'
activesupport (7.0.4.2) lib/active_support/callbacks.rb:99:in `run_callbacks'
actionpack (7.0.4.2) lib/action_dispatch/middleware/callbacks.rb:26:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/actionable_exceptions.rb:17:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/debug_exceptions.rb:28:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/show_exceptions.rb:26:in `call'
railties (7.0.4.2) lib/rails/rack/logger.rb:40:in `call_app'
railties (7.0.4.2) lib/rails/rack/logger.rb:25:in `block in call'
activesupport (7.0.4.2) lib/active_support/tagged_logging.rb:99:in `block in tagged'
activesupport (7.0.4.2) lib/active_support/tagged_logging.rb:37:in `tagged'
activesupport (7.0.4.2) lib/active_support/tagged_logging.rb:99:in `tagged'
railties (7.0.4.2) lib/rails/rack/logger.rb:25:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/remote_ip.rb:93:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/request_id.rb:26:in `call'
rack (2.2.6.2) lib/rack/runtime.rb:22:in `call'
activesupport (7.0.4.2) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/server_timing.rb:61:in `block in call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/server_timing.rb:26:in `collect_events'
actionpack (7.0.4.2) lib/action_dispatch/middleware/server_timing.rb:60:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/static.rb:23:in `call'
rack (2.2.6.2) lib/rack/sendfile.rb:110:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/host_authorization.rb:137:in `call'
rack-cors (2.0.0) lib/rack/cors.rb:102:in `call'
railties (7.0.4.2) lib/rails/engine.rb:530:in `call'
puma (5.6.5) lib/puma/configuration.rb:252:in `call'
puma (5.6.5) lib/puma/request.rb:77:in `block in handle_request'
puma (5.6.5) lib/puma/thread_pool.rb:340:in `with_force_shutdown'
puma (5.6.5) lib/puma/request.rb:76:in `handle_request'
puma (5.6.5) lib/puma/server.rb:443:in `process_client'
puma (5.6.5) lib/puma/thread_pool.rb:147:in `block in spawn_thread'
  [1m[36mActiveRecord::SchemaMigration Pluck (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateBooks (20221219075329)
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mCREATE TABLE "books" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar, "created_at" datetime(6) NOT NULL, "updated_at" datetime(6) NOT NULL)[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20221219075329"]]
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mActiveRecord::InternalMetadata Create (0.2ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2023-02-23 19:55:51.468002"], ["updated_at", "2023-02-23 19:55:51.468002"]]
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::SchemaMigration Pluck (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Started GET "/graphiql" for ::1 at 2023-02-24 04:56:05 +0900
  [1m[36mActiveRecord::SchemaMigration Pluck (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb (Duration: 1281.0ms | Allocations: 47942)
Completed 200 OK in 1287ms (Views: 1282.4ms | ActiveRecord: 0.0ms | Allocations: 51286)


Started GET "/assets/graphiql/rails/application-5bb68625e0c7ddf3eece980e20001faed96197d338dca5fa33e0f5da8a060deb.css" for ::1 at 2023-02-24 04:56:06 +0900
Started GET "/assets/graphiql/rails/application-d78230954080343c556e7465ad58ff8802dc2c2455d2e14983801a14c3dd0036.js" for ::1 at 2023-02-24 04:56:06 +0900
Started POST "/graphql" for ::1 at 2023-02-24 04:56:06 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Started GET "/favicon.ico" for ::1 at 2023-02-24 04:56:07 +0900
Completed 200 OK in 36ms (Views: 2.5ms | ActiveRecord: 0.0ms | Allocations: 33612)


  
ActionController::RoutingError (No route matches [GET] "/favicon.ico"):
  
Started GET "/" for ::1 at 2023-02-24 04:56:07 +0900
Processing by Rails::WelcomeController#index as HTML
  Rendering vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/templates/rails/welcome/index.html.erb
  Rendered vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/templates/rails/welcome/index.html.erb (Duration: 1.8ms | Allocations: 287)
Completed 200 OK in 5ms (Views: 3.2ms | ActiveRecord: 0.0ms | Allocations: 1033)


  [1m[36mActiveRecord::SchemaMigration Pluck (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mBook Create (0.2ms)[0m  [1m[32mINSERT INTO "books" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "本 1"], ["created_at", "2023-02-23 19:56:24.647047"], ["updated_at", "2023-02-23 19:56:24.647047"]]
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mBook Create (0.1ms)[0m  [1m[32mINSERT INTO "books" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "本 2"], ["created_at", "2023-02-23 19:56:24.648969"], ["updated_at", "2023-02-23 19:56:24.648969"]]
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mBook Create (0.1ms)[0m  [1m[32mINSERT INTO "books" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "本 3"], ["created_at", "2023-02-23 19:56:24.650146"], ["updated_at", "2023-02-23 19:56:24.650146"]]
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[36mcommit transaction[0m
Started GET "/graphiql" for ::1 at 2023-02-24 04:56:35 +0900
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb (Duration: 4.5ms | Allocations: 2703)
Completed 200 OK in 9ms (Views: 7.2ms | ActiveRecord: 0.0ms | Allocations: 3572)


Started POST "/graphql" for ::1 at 2023-02-24 04:56:35 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 28ms (Views: 3.1ms | ActiveRecord: 0.0ms | Allocations: 25078)


Started POST "/graphql" for ::1 at 2023-02-24 04:56:37 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  books {\n    id\n    title\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"{\n  books {\n    id\n    title\n  }\n}", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.3ms | ActiveRecord: 0.0ms | Allocations: 590)


Started POST "/graphql" for ::1 at 2023-02-24 04:56:45 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  book {\n    id\n    title\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"{\n  book {\n    id\n    title\n  }\n}", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.4ms | ActiveRecord: 0.0ms | Allocations: 551)


  [1m[36mActiveRecord::SchemaMigration Pluck (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.0ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[36mActiveRecord::SchemaMigration Pluck (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::SchemaMigration Pluck (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mBook Create (0.2ms)[0m  [1m[32mINSERT INTO "books" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "本 1"], ["created_at", "2023-02-23 19:57:38.144177"], ["updated_at", "2023-02-23 19:57:38.144177"]]
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mBook Create (0.1ms)[0m  [1m[32mINSERT INTO "books" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "本 2"], ["created_at", "2023-02-23 19:57:38.145917"], ["updated_at", "2023-02-23 19:57:38.145917"]]
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mBook Create (0.1ms)[0m  [1m[32mINSERT INTO "books" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "本 3"], ["created_at", "2023-02-23 19:57:38.147169"], ["updated_at", "2023-02-23 19:57:38.147169"]]
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[36mcommit transaction[0m
Started GET "/graphiql" for ::1 at 2023-02-24 04:57:45 +0900
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb (Duration: 1.9ms | Allocations: 2532)
Completed 200 OK in 2ms (Views: 2.2ms | Allocations: 3111)


Started POST "/graphql" for ::1 at 2023-02-24 04:57:45 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 30ms (Views: 5.9ms | Allocations: 30416)


Started POST "/graphql" for ::1 at 2023-02-24 04:57:47 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  book {\n    id\n    title\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"{\n  book {\n    id\n    title\n  }\n}", "variables"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | Allocations: 630)


Started POST "/graphql" for ::1 at 2023-02-24 04:57:51 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  books {\n    id\n    title\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"{\n  books {\n    id\n    title\n  }\n}", "variables"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | Allocations: 548)


Started POST "/graphql" for ::1 at 2023-02-24 04:57:57 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"{\n  \n}", "variables"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | Allocations: 493)


Started POST "/graphql" for ::1 at 2023-02-24 04:58:07 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  Book\n}", "variables"=>nil, "graphql"=>{"query"=>"{\n  Book\n}", "variables"=>nil}}
Completed 200 OK in 5ms (Views: 0.1ms | Allocations: 5565)


  [1m[36mActiveRecord::SchemaMigration Pluck (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mBook Create (0.5ms)[0m  [1m[32mINSERT INTO "books" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "本 1"], ["created_at", "2023-02-23 19:59:04.946755"], ["updated_at", "2023-02-23 19:59:04.946755"]]
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mBook Create (0.2ms)[0m  [1m[32mINSERT INTO "books" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "本 2"], ["created_at", "2023-02-23 19:59:04.949284"], ["updated_at", "2023-02-23 19:59:04.949284"]]
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mBook Create (0.2ms)[0m  [1m[32mINSERT INTO "books" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "本 3"], ["created_at", "2023-02-23 19:59:04.950949"], ["updated_at", "2023-02-23 19:59:04.950949"]]
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[36mcommit transaction[0m
Started GET "/graphiql" for ::1 at 2023-02-24 04:59:28 +0900
  [1m[36mActiveRecord::SchemaMigration Pluck (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb (Duration: 32.4ms | Allocations: 12626)
Completed 200 OK in 37ms (Views: 33.9ms | ActiveRecord: 0.0ms | Allocations: 15543)


Started POST "/graphql" for ::1 at 2023-02-24 04:59:28 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 29ms (Views: 2.4ms | ActiveRecord: 0.0ms | Allocations: 32811)


Started POST "/graphql" for ::1 at 2023-02-24 04:59:29 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  Book\n}", "variables"=>nil, "graphql"=>{"query"=>"{\n  Book\n}", "variables"=>nil}}
Completed 200 OK in 1ms (Views: 0.1ms | ActiveRecord: 0.0ms | Allocations: 666)


Started POST "/graphql" for ::1 at 2023-02-24 04:59:32 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  testField\n}", "variables"=>nil, "graphql"=>{"query"=>"{\n  testField\n}", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.0ms | Allocations: 529)


Started POST "/graphql" for ::1 at 2023-02-24 04:59:37 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  books\n}", "variables"=>nil, "graphql"=>{"query"=>"{\n  books\n}", "variables"=>nil}}
Completed 200 OK in 1ms (Views: 0.1ms | ActiveRecord: 0.0ms | Allocations: 527)


  [1m[36mActiveRecord::SchemaMigration Pluck (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.0ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[36mActiveRecord::SchemaMigration Pluck (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::SchemaMigration Pluck (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mBook Create (0.2ms)[0m  [1m[32mINSERT INTO "books" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "本 1"], ["created_at", "2023-02-23 20:00:44.344648"], ["updated_at", "2023-02-23 20:00:44.344648"]]
  [1m[36mTRANSACTION (0.5ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mBook Create (0.1ms)[0m  [1m[32mINSERT INTO "books" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "本 2"], ["created_at", "2023-02-23 20:00:44.346626"], ["updated_at", "2023-02-23 20:00:44.346626"]]
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mBook Create (0.1ms)[0m  [1m[32mINSERT INTO "books" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "本 3"], ["created_at", "2023-02-23 20:00:44.347974"], ["updated_at", "2023-02-23 20:00:44.347974"]]
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[36mcommit transaction[0m
Started GET "/graphiql" for ::1 at 2023-02-24 05:01:59 +0900
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb (Duration: 2.2ms | Allocations: 2560)
Completed 200 OK in 3ms (Views: 2.6ms | Allocations: 3147)


Started POST "/graphql" for ::1 at 2023-02-24 05:01:59 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 26ms (Views: 2.2ms | Allocations: 30440)


Started POST "/graphql" for ::1 at 2023-02-24 05:02:01 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  books {\n    id\n    title\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"{\n  books {\n    id\n    title\n  }\n}", "variables"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | Allocations: 631)


Started POST "/graphql" for ::1 at 2023-02-24 05:02:03 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  books {\n    id\n    title\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"{\n  books {\n    id\n    title\n  }\n}", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.3ms | Allocations: 547)


Started GET "/graphiql" for ::1 at 2023-02-24 05:02:49 +0900
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb (Duration: 5.0ms | Allocations: 2434)
Completed 200 OK in 6ms (Views: 5.6ms | Allocations: 2722)


Started POST "/graphql" for ::1 at 2023-02-24 05:02:49 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 26ms (Views: 2.6ms | Allocations: 24790)


Started POST "/graphql" for ::1 at 2023-02-24 05:02:50 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  books {\n    id\n    title\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"{\n  books {\n    id\n    title\n  }\n}", "variables"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | Allocations: 553)


  [1m[36mActiveRecord::SchemaMigration Pluck (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mBook Create (0.5ms)[0m  [1m[32mINSERT INTO "books" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "本 1"], ["created_at", "2023-02-23 20:04:36.179117"], ["updated_at", "2023-02-23 20:04:36.179117"]]
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mBook Create (0.1ms)[0m  [1m[32mINSERT INTO "books" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "本 2"], ["created_at", "2023-02-23 20:04:36.181297"], ["updated_at", "2023-02-23 20:04:36.181297"]]
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mBook Create (0.1ms)[0m  [1m[32mINSERT INTO "books" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "本 3"], ["created_at", "2023-02-23 20:04:36.182499"], ["updated_at", "2023-02-23 20:04:36.182499"]]
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[36mcommit transaction[0m
Started GET "/graphiql" for ::1 at 2023-02-24 05:04:43 +0900
  [1m[36mActiveRecord::SchemaMigration Pluck (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb (Duration: 32.7ms | Allocations: 12553)
Completed 200 OK in 37ms (Views: 34.1ms | ActiveRecord: 0.0ms | Allocations: 15470)


Started POST "/graphql" for ::1 at 2023-02-24 05:04:43 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 27ms (Views: 2.3ms | ActiveRecord: 0.0ms | Allocations: 32668)


Started POST "/graphql" for ::1 at 2023-02-24 05:04:44 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  books {\n    id\n    title\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"{\n  books {\n    id\n    title\n  }\n}", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms | Allocations: 692)


Started POST "/graphql" for ::1 at 2023-02-24 05:04:47 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"", "variables"=>nil, "graphql"=>{"query"=>"", "variables"=>nil}}
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.0ms | Allocations: 298)


Started POST "/graphql" for ::1 at 2023-02-24 05:04:54 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  books {\n    id\n    title\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"{\n  books {\n    id\n    title\n  }\n}", "variables"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms | Allocations: 552)


  [1m[36mActiveRecord::SchemaMigration Pluck (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mBook Create (0.4ms)[0m  [1m[32mINSERT INTO "books" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "本 1"], ["created_at", "2023-02-23 20:11:42.673996"], ["updated_at", "2023-02-23 20:11:42.673996"]]
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mBook Create (0.2ms)[0m  [1m[32mINSERT INTO "books" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "本 2"], ["created_at", "2023-02-23 20:11:42.676347"], ["updated_at", "2023-02-23 20:11:42.676347"]]
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mBook Create (0.1ms)[0m  [1m[32mINSERT INTO "books" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "本 3"], ["created_at", "2023-02-23 20:11:42.677924"], ["updated_at", "2023-02-23 20:11:42.677924"]]
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[36mcommit transaction[0m
Started GET "/graphiql" for ::1 at 2023-02-24 05:11:51 +0900
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb (Duration: 6.1ms | Allocations: 2441)
Completed 200 OK in 8ms (Views: 6.9ms | Allocations: 2734)


Started GET "/assets/graphiql/rails/application-d78230954080343c556e7465ad58ff8802dc2c2455d2e14983801a14c3dd0036.js" for ::1 at 2023-02-24 05:11:51 +0900
Started POST "/graphql" for ::1 at 2023-02-24 05:11:51 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 51ms (Views: 5.1ms | Allocations: 24861)


Started POST "/graphql" for ::1 at 2023-02-24 05:11:52 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  books {\n    id\n    title\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"{\n  books {\n    id\n    title\n  }\n}", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.5ms | Allocations: 548)


Started GET "/graphiql" for ::1 at 2023-02-24 05:13:59 +0900
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb (Duration: 1.9ms | Allocations: 2561)
Completed 200 OK in 2ms (Views: 2.3ms | Allocations: 3145)


Started POST "/graphql" for ::1 at 2023-02-24 05:14:00 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 500 Internal Server Error in 9ms (Allocations: 4493)


  
SyntaxError (/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/queries/books.rb:10: syntax error, unexpected end-of-input, expecting `end'
endBo
     ^
):
  
app/graphql/queries/books.rb:10: syntax error, unexpected end-of-input, expecting `end'
app/graphql/queries/books.rb:10: syntax error, unexpected end-of-input, expecting `end'
app/graphql/types/query_type.rb:10:in `<class:QueryType>'
app/graphql/types/query_type.rb:3:in `<module:Types>'
app/graphql/types/query_type.rb:1:in `<main>'
app/graphql/rails_react_graphql_schema.rb:3:in `<class:RailsReactGraphqlSchema>'
app/graphql/rails_react_graphql_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:15:in `execute'
Started POST "/graphql" for ::1 at 2023-02-24 05:14:00 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        \n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        \n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Second definition of `mutation(...)` (Types::MutationType) is invalid, already configured with Types::MutationType
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:339:in `mutation'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/rails_react_graphql_schema.rb:2:in `<class:RailsReactGraphqlSchema>'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/rails_react_graphql_schema.rb:1:in `<main>'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/bootsnap-1.16.0/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:32:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/zeitwerk-2.6.7/lib/zeitwerk/kernel.rb:30:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/controllers/graphql_controller.rb:15:in `execute'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/basic_implicit_render.rb:6:in `send_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/base.rb:215:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/rendering.rb:53:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/callbacks.rb:234:in `block in process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/callbacks.rb:99:in `run_callbacks'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/callbacks.rb:233:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/rescue.rb:22:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/instrumentation.rb:67:in `block in process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications.rb:206:in `block in instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications/instrumenter.rb:24:in `instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications.rb:206:in `instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/instrumentation.rb:66:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/params_wrapper.rb:259:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/railties/controller_runtime.rb:27:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/base.rb:151:in `process'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal.rb:188:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal.rb:251:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:49:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:32:in `serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:50:in `block in serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:32:in `each'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:32:in `serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:852:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/session/abstract/id.rb:266:in `context'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/session/abstract/id.rb:260:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/etag.rb:27:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/conditional_get.rb:40:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/head.rb:12:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/migration.rb:603:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/callbacks.rb:27:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/callbacks.rb:99:in `run_callbacks'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/callbacks.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/actionable_exceptions.rb:17:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/debug_exceptions.rb:28:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/show_exceptions.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:40:in `call_app'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:25:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:99:in `block in tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:37:in `tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:99:in `tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:25:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/remote_ip.rb:93:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/request_id.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/runtime.rb:22:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:61:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:26:in `collect_events'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:60:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/static.rb:23:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/sendfile.rb:110:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/host_authorization.rb:137:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-cors-2.0.0/lib/rack/cors.rb:102:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/engine.rb:530:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/configuration.rb:252:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/request.rb:77:in `block in handle_request'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/thread_pool.rb:340:in `with_force_shutdown'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/request.rb:76:in `handle_request'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/server.rb:443:in `process_client'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/thread_pool.rb:147:in `block in spawn_thread'
Completed 500 Internal Server Error in 2ms (Views: 0.4ms | Allocations: 787)


Started POST "/graphql" for ::1 at 2023-02-24 05:14:03 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  books {\n    id\n    title\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"{\n  books {\n    id\n    title\n  }\n}", "variables"=>nil}}
Second definition of `mutation(...)` (Types::MutationType) is invalid, already configured with Types::MutationType
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:339:in `mutation'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/rails_react_graphql_schema.rb:2:in `<class:RailsReactGraphqlSchema>'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/rails_react_graphql_schema.rb:1:in `<main>'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/bootsnap-1.16.0/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:32:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/zeitwerk-2.6.7/lib/zeitwerk/kernel.rb:30:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/controllers/graphql_controller.rb:15:in `execute'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/basic_implicit_render.rb:6:in `send_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/base.rb:215:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/rendering.rb:53:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/callbacks.rb:234:in `block in process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/callbacks.rb:99:in `run_callbacks'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/callbacks.rb:233:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/rescue.rb:22:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/instrumentation.rb:67:in `block in process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications.rb:206:in `block in instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications/instrumenter.rb:24:in `instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications.rb:206:in `instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/instrumentation.rb:66:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/params_wrapper.rb:259:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/railties/controller_runtime.rb:27:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/base.rb:151:in `process'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal.rb:188:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal.rb:251:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:49:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:32:in `serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:50:in `block in serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:32:in `each'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:32:in `serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:852:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/session/abstract/id.rb:266:in `context'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/session/abstract/id.rb:260:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/etag.rb:27:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/conditional_get.rb:40:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/head.rb:12:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/migration.rb:603:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/callbacks.rb:27:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/callbacks.rb:99:in `run_callbacks'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/callbacks.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/actionable_exceptions.rb:17:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/debug_exceptions.rb:28:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/show_exceptions.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:40:in `call_app'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:25:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:99:in `block in tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:37:in `tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:99:in `tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:25:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/remote_ip.rb:93:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/request_id.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/runtime.rb:22:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:61:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:26:in `collect_events'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:60:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/static.rb:23:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/sendfile.rb:110:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/host_authorization.rb:137:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-cors-2.0.0/lib/rack/cors.rb:102:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/engine.rb:530:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/configuration.rb:252:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/request.rb:77:in `block in handle_request'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/thread_pool.rb:340:in `with_force_shutdown'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/request.rb:76:in `handle_request'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/server.rb:443:in `process_client'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/thread_pool.rb:147:in `block in spawn_thread'
Completed 500 Internal Server Error in 4ms (Views: 1.4ms | Allocations: 695)


Started GET "/graphiql" for ::1 at 2023-02-24 05:14:25 +0900
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb (Duration: 1.9ms | Allocations: 2560)
Completed 200 OK in 2ms (Views: 2.3ms | Allocations: 3141)


Started POST "/graphql" for ::1 at 2023-02-24 05:14:25 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 500 Internal Server Error in 6ms (Allocations: 4478)


  
SyntaxError (/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/queries/books.rb:10: syntax error, unexpected end-of-input, expecting `end'
endBo
     ^
):
  
app/graphql/queries/books.rb:10: syntax error, unexpected end-of-input, expecting `end'
app/graphql/queries/books.rb:10: syntax error, unexpected end-of-input, expecting `end'
app/graphql/types/query_type.rb:10:in `<class:QueryType>'
app/graphql/types/query_type.rb:3:in `<module:Types>'
app/graphql/types/query_type.rb:1:in `<main>'
app/graphql/rails_react_graphql_schema.rb:3:in `<class:RailsReactGraphqlSchema>'
app/graphql/rails_react_graphql_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:15:in `execute'
Started POST "/graphql" for ::1 at 2023-02-24 05:14:25 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        \n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        \n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Second definition of `mutation(...)` (Types::MutationType) is invalid, already configured with Types::MutationType
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:339:in `mutation'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/rails_react_graphql_schema.rb:2:in `<class:RailsReactGraphqlSchema>'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/rails_react_graphql_schema.rb:1:in `<main>'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/bootsnap-1.16.0/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:32:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/zeitwerk-2.6.7/lib/zeitwerk/kernel.rb:30:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/controllers/graphql_controller.rb:15:in `execute'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/basic_implicit_render.rb:6:in `send_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/base.rb:215:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/rendering.rb:53:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/callbacks.rb:234:in `block in process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/callbacks.rb:99:in `run_callbacks'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/callbacks.rb:233:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/rescue.rb:22:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/instrumentation.rb:67:in `block in process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications.rb:206:in `block in instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications/instrumenter.rb:24:in `instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications.rb:206:in `instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/instrumentation.rb:66:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/params_wrapper.rb:259:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/railties/controller_runtime.rb:27:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/base.rb:151:in `process'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal.rb:188:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal.rb:251:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:49:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:32:in `serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:50:in `block in serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:32:in `each'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:32:in `serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:852:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/session/abstract/id.rb:266:in `context'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/session/abstract/id.rb:260:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/etag.rb:27:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/conditional_get.rb:40:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/head.rb:12:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/migration.rb:603:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/callbacks.rb:27:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/callbacks.rb:99:in `run_callbacks'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/callbacks.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/actionable_exceptions.rb:17:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/debug_exceptions.rb:28:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/show_exceptions.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:40:in `call_app'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:25:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:99:in `block in tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:37:in `tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:99:in `tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:25:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/remote_ip.rb:93:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/request_id.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/runtime.rb:22:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:61:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:26:in `collect_events'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:60:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/static.rb:23:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/sendfile.rb:110:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/host_authorization.rb:137:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-cors-2.0.0/lib/rack/cors.rb:102:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/engine.rb:530:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/configuration.rb:252:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/request.rb:77:in `block in handle_request'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/thread_pool.rb:340:in `with_force_shutdown'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/request.rb:76:in `handle_request'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/server.rb:443:in `process_client'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/thread_pool.rb:147:in `block in spawn_thread'
Completed 500 Internal Server Error in 3ms (Views: 0.6ms | Allocations: 782)


  [1m[36mActiveRecord::SchemaMigration Pluck (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mBook Create (0.4ms)[0m  [1m[32mINSERT INTO "books" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "本 1"], ["created_at", "2023-02-23 20:14:28.856558"], ["updated_at", "2023-02-23 20:14:28.856558"]]
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mBook Create (0.1ms)[0m  [1m[32mINSERT INTO "books" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "本 2"], ["created_at", "2023-02-23 20:14:28.858616"], ["updated_at", "2023-02-23 20:14:28.858616"]]
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mBook Create (0.1ms)[0m  [1m[32mINSERT INTO "books" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "本 3"], ["created_at", "2023-02-23 20:14:28.859820"], ["updated_at", "2023-02-23 20:14:28.859820"]]
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[36mcommit transaction[0m
Started GET "/graphiql" for ::1 at 2023-02-24 05:14:33 +0900
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb (Duration: 3.4ms | Allocations: 2457)
Completed 200 OK in 4ms (Views: 3.7ms | Allocations: 2745)


Started POST "/graphql" for ::1 at 2023-02-24 05:14:33 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Second definition of `mutation(...)` (Types::MutationType) is invalid, already configured with Types::MutationType
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:339:in `mutation'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/rails_react_graphql_schema.rb:2:in `<class:RailsReactGraphqlSchema>'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/rails_react_graphql_schema.rb:1:in `<main>'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/bootsnap-1.16.0/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:32:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/zeitwerk-2.6.7/lib/zeitwerk/kernel.rb:30:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/controllers/graphql_controller.rb:15:in `execute'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/basic_implicit_render.rb:6:in `send_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/base.rb:215:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/rendering.rb:53:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/callbacks.rb:234:in `block in process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/callbacks.rb:99:in `run_callbacks'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/callbacks.rb:233:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/rescue.rb:22:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/instrumentation.rb:67:in `block in process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications.rb:206:in `block in instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications/instrumenter.rb:24:in `instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications.rb:206:in `instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/instrumentation.rb:66:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/params_wrapper.rb:259:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/railties/controller_runtime.rb:27:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/base.rb:151:in `process'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal.rb:188:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal.rb:251:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:49:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:32:in `serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:50:in `block in serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:32:in `each'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:32:in `serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:852:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/session/abstract/id.rb:266:in `context'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/session/abstract/id.rb:260:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/etag.rb:27:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/conditional_get.rb:40:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/head.rb:12:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/migration.rb:603:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/callbacks.rb:27:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/callbacks.rb:99:in `run_callbacks'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/callbacks.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/actionable_exceptions.rb:17:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/debug_exceptions.rb:28:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/show_exceptions.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:40:in `call_app'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:25:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:99:in `block in tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:37:in `tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:99:in `tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:25:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/remote_ip.rb:93:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/request_id.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/runtime.rb:22:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:61:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:26:in `collect_events'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:60:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/static.rb:23:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/sendfile.rb:110:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/host_authorization.rb:137:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-cors-2.0.0/lib/rack/cors.rb:102:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/engine.rb:530:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/configuration.rb:252:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/request.rb:77:in `block in handle_request'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/thread_pool.rb:340:in `with_force_shutdown'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/request.rb:76:in `handle_request'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/server.rb:443:in `process_client'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/thread_pool.rb:147:in `block in spawn_thread'
Completed 500 Internal Server Error in 9ms (Views: 0.7ms | Allocations: 2425)


Started GET "/graphiql" for ::1 at 2023-02-24 05:14:44 +0900
  [1m[36mActiveRecord::SchemaMigration Pluck (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb (Duration: 34.2ms | Allocations: 12571)
Completed 200 OK in 38ms (Views: 35.7ms | ActiveRecord: 0.0ms | Allocations: 15488)


Started POST "/graphql" for ::1 at 2023-02-24 05:14:44 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms | Allocations: 4952)


  
SyntaxError (/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/queries/books.rb:10: syntax error, unexpected end-of-input, expecting `end'
endBo
     ^
):
  
app/graphql/queries/books.rb:10: syntax error, unexpected end-of-input, expecting `end'
app/graphql/queries/books.rb:10: syntax error, unexpected end-of-input, expecting `end'
app/graphql/types/query_type.rb:10:in `<class:QueryType>'
app/graphql/types/query_type.rb:3:in `<module:Types>'
app/graphql/types/query_type.rb:1:in `<main>'
app/graphql/rails_react_graphql_schema.rb:3:in `<class:RailsReactGraphqlSchema>'
app/graphql/rails_react_graphql_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:15:in `execute'
Started POST "/graphql" for ::1 at 2023-02-24 05:14:44 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        \n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        \n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Second definition of `mutation(...)` (Types::MutationType) is invalid, already configured with Types::MutationType
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:339:in `mutation'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/rails_react_graphql_schema.rb:2:in `<class:RailsReactGraphqlSchema>'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/rails_react_graphql_schema.rb:1:in `<main>'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/bootsnap-1.16.0/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:32:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/zeitwerk-2.6.7/lib/zeitwerk/kernel.rb:30:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/controllers/graphql_controller.rb:15:in `execute'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/basic_implicit_render.rb:6:in `send_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/base.rb:215:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/rendering.rb:53:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/callbacks.rb:234:in `block in process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/callbacks.rb:99:in `run_callbacks'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/callbacks.rb:233:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/rescue.rb:22:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/instrumentation.rb:67:in `block in process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications.rb:206:in `block in instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications/instrumenter.rb:24:in `instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications.rb:206:in `instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/instrumentation.rb:66:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/params_wrapper.rb:259:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/railties/controller_runtime.rb:27:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/base.rb:151:in `process'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal.rb:188:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal.rb:251:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:49:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:32:in `serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:50:in `block in serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:32:in `each'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:32:in `serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:852:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/session/abstract/id.rb:266:in `context'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/session/abstract/id.rb:260:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/etag.rb:27:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/conditional_get.rb:40:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/head.rb:12:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/migration.rb:603:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/callbacks.rb:27:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/callbacks.rb:99:in `run_callbacks'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/callbacks.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/actionable_exceptions.rb:17:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/debug_exceptions.rb:28:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/show_exceptions.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:40:in `call_app'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:25:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:99:in `block in tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:37:in `tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:99:in `tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:25:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/remote_ip.rb:93:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/request_id.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/runtime.rb:22:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:61:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:26:in `collect_events'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:60:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/static.rb:23:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/sendfile.rb:110:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/host_authorization.rb:137:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-cors-2.0.0/lib/rack/cors.rb:102:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/engine.rb:530:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/configuration.rb:252:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/request.rb:77:in `block in handle_request'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/thread_pool.rb:340:in `with_force_shutdown'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/request.rb:76:in `handle_request'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/server.rb:443:in `process_client'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/thread_pool.rb:147:in `block in spawn_thread'
Completed 500 Internal Server Error in 1ms (Views: 0.3ms | ActiveRecord: 0.0ms | Allocations: 828)


Started GET "/graphiql" for ::1 at 2023-02-24 05:15:59 +0900
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb (Duration: 2.0ms | Allocations: 2561)
Completed 200 OK in 3ms (Views: 2.9ms | Allocations: 3151)


Started POST "/graphql" for ::1 at 2023-02-24 05:15:59 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 33ms (Views: 2.7ms | Allocations: 32588)


Started POST "/graphql" for ::1 at 2023-02-24 05:16:01 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  books {\n    id\n    title\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"{\n  books {\n    id\n    title\n  }\n}", "variables"=>nil}}
  [1m[36mBook Load (0.9ms)[0m  [1m[34mSELECT "books".* FROM "books" ORDER BY "books"."id" ASC[0m
Completed 200 OK in 21ms (Views: 0.6ms | ActiveRecord: 2.4ms | Allocations: 7274)


Started POST "/graphql" for ::1 at 2023-02-24 05:17:50 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  updateBook(input: {id: 2, params: {title: \"updated book\"}}) {\n    book {\n      id\n      title\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  updateBook(input: {id: 2, params: {title: \"updated book\"}}) {\n    book {\n      id\n      title\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mBook Load (0.2ms)[0m  [1m[34mSELECT "books".* FROM "books" WHERE "books"."id" = ? LIMIT ?[0m  [["id", 2], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_book.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_book.rb:10:in `resolve'
  [1m[36mBook Update (0.2ms)[0m  [1m[33mUPDATE "books" SET "title" = ?, "updated_at" = ? WHERE "books"."id" = ?[0m  [["title", "updated book"], ["updated_at", "2023-02-23 20:17:51.015431"], ["id", 2]]
  ↳ app/graphql/mutations/update_book.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_book.rb:10:in `resolve'
Completed 200 OK in 13ms (Views: 0.1ms | ActiveRecord: 1.0ms | Allocations: 12052)


Started POST "/graphql" for ::1 at 2023-02-24 05:17:55 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  books {\n    id\n    title\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"{\n  books {\n    id\n    title\n  }\n}", "variables"=>nil}}
  [1m[36mBook Load (0.5ms)[0m  [1m[34mSELECT "books".* FROM "books" ORDER BY "books"."id" ASC[0m
Completed 200 OK in 7ms (Views: 0.5ms | ActiveRecord: 0.5ms | Allocations: 2629)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:09 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}"}}
  [1m[36mBook Load (0.2ms)[0m  [1m[34mSELECT "books".* FROM "books" ORDER BY "books"."id" ASC[0m
Completed 200 OK in 13ms (Views: 0.3ms | ActiveRecord: 0.2ms | Allocations: 3523)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:19 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateBook", "variables"=>{"id"=>"1", "params"=>{"title"=>"本 12"}}, "query"=>"mutation updateBook($id: ID!, $params: BookAttributes!) {\n  updateBook(input: {id: $id, params: $params}) {\n    book {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateBook", "variables"=>{"id"=>"1", "params"=>{"title"=>"本 12"}}, "query"=>"mutation updateBook($id: ID!, $params: BookAttributes!) {\n  updateBook(input: {id: $id, params: $params}) {\n    book {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mBook Load (0.1ms)[0m  [1m[34mSELECT "books".* FROM "books" WHERE "books"."id" = ? LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_book.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_book.rb:10:in `resolve'
  [1m[36mBook Update (0.4ms)[0m  [1m[33mUPDATE "books" SET "title" = ?, "updated_at" = ? WHERE "books"."id" = ?[0m  [["title", "本 12"], ["updated_at", "2023-02-23 20:20:19.476444"], ["id", 1]]
  ↳ app/graphql/mutations/update_book.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.5ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_book.rb:10:in `resolve'
Completed 200 OK in 8ms (Views: 0.3ms | ActiveRecord: 1.0ms | Allocations: 3667)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:19 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateBook", "variables"=>{"id"=>"1", "params"=>{"title"=>"本 122"}}, "query"=>"mutation updateBook($id: ID!, $params: BookAttributes!) {\n  updateBook(input: {id: $id, params: $params}) {\n    book {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateBook", "variables"=>{"id"=>"1", "params"=>{"title"=>"本 122"}}, "query"=>"mutation updateBook($id: ID!, $params: BookAttributes!) {\n  updateBook(input: {id: $id, params: $params}) {\n    book {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mBook Load (0.2ms)[0m  [1m[34mSELECT "books".* FROM "books" WHERE "books"."id" = ? LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_book.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_book.rb:10:in `resolve'
  [1m[36mBook Update (0.6ms)[0m  [1m[33mUPDATE "books" SET "title" = ?, "updated_at" = ? WHERE "books"."id" = ?[0m  [["title", "本 122"], ["updated_at", "2023-02-23 20:20:19.631291"], ["id", 1]]
  ↳ app/graphql/mutations/update_book.rb:10:in `resolve'
  [1m[36mTRANSACTION (1.0ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_book.rb:10:in `resolve'
Completed 200 OK in 12ms (Views: 0.2ms | ActiveRecord: 1.8ms | Allocations: 3284)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:19 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateBook", "variables"=>{"id"=>"1", "params"=>{"title"=>"本 1222"}}, "query"=>"mutation updateBook($id: ID!, $params: BookAttributes!) {\n  updateBook(input: {id: $id, params: $params}) {\n    book {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateBook", "variables"=>{"id"=>"1", "params"=>{"title"=>"本 1222"}}, "query"=>"mutation updateBook($id: ID!, $params: BookAttributes!) {\n  updateBook(input: {id: $id, params: $params}) {\n    book {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mBook Load (0.1ms)[0m  [1m[34mSELECT "books".* FROM "books" WHERE "books"."id" = ? LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_book.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_book.rb:10:in `resolve'
  [1m[36mBook Update (0.3ms)[0m  [1m[33mUPDATE "books" SET "title" = ?, "updated_at" = ? WHERE "books"."id" = ?[0m  [["title", "本 1222"], ["updated_at", "2023-02-23 20:20:19.798090"], ["id", 1]]
  ↳ app/graphql/mutations/update_book.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.7ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_book.rb:10:in `resolve'
Completed 200 OK in 6ms (Views: 0.2ms | ActiveRecord: 1.2ms | Allocations: 3284)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:23 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}"}}
  [1m[36mBook Load (0.5ms)[0m  [1m[34mSELECT "books".* FROM "books" ORDER BY "books"."id" ASC[0m
Completed 200 OK in 9ms (Views: 0.7ms | ActiveRecord: 0.5ms | Allocations: 2807)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:24 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteBook", "variables"=>{"id"=>"1"}, "query"=>"mutation deleteBook($id: ID!) {\n  deleteBook(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteBook", "variables"=>{"id"=>"1"}, "query"=>"mutation deleteBook($id: ID!) {\n  deleteBook(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mBook Load (0.2ms)[0m  [1m[34mSELECT "books".* FROM "books" WHERE "books"."id" = ? LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_book.rb:8:in `resolve'
  [1m[36mBook Destroy (1.4ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 1]]
  ↳ app/graphql/mutations/delete_book.rb:8:in `resolve'
Completed 200 OK in 8ms (Views: 0.3ms | ActiveRecord: 1.6ms | Allocations: 1828)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:24 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}"}}
  [1m[36mBook Load (0.1ms)[0m  [1m[34mSELECT "books".* FROM "books" ORDER BY "books"."id" ASC[0m
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 0.1ms | Allocations: 2727)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:25 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}"}}
  [1m[36mBook Load (0.2ms)[0m  [1m[34mSELECT "books".* FROM "books" ORDER BY "books"."id" ASC[0m
Completed 200 OK in 7ms (Views: 1.3ms | ActiveRecord: 0.2ms | Allocations: 2728)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:28 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createBook", "variables"=>{"params"=>{"title"=>"knkn"}}, "query"=>"mutation createBook($params: BookAttributes!) {\n  createBook(input: {params: $params}) {\n    book {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createBook", "variables"=>{"params"=>{"title"=>"knkn"}}, "query"=>"mutation createBook($params: BookAttributes!) {\n  createBook(input: {params: $params}) {\n    book {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_book.rb:11:in `resolve'
  [1m[36mBook Create (0.9ms)[0m  [1m[32mINSERT INTO "books" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "knkn"], ["created_at", "2023-02-23 20:20:28.347013"], ["updated_at", "2023-02-23 20:20:28.347013"]]
  ↳ app/graphql/mutations/create_book.rb:11:in `resolve'
  [1m[36mTRANSACTION (0.9ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_book.rb:11:in `resolve'
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 1.9ms | Allocations: 2941)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:28 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}"}}
  [1m[36mBook Load (0.2ms)[0m  [1m[34mSELECT "books".* FROM "books" ORDER BY "books"."id" ASC[0m
Completed 200 OK in 6ms (Views: 0.9ms | ActiveRecord: 0.2ms | Allocations: 2806)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:29 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteBook", "variables"=>{"id"=>"12"}, "query"=>"mutation deleteBook($id: ID!) {\n  deleteBook(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteBook", "variables"=>{"id"=>"12"}, "query"=>"mutation deleteBook($id: ID!) {\n  deleteBook(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mBook Load (0.2ms)[0m  [1m[34mSELECT "books".* FROM "books" WHERE "books"."id" = ? LIMIT ?[0m  [["id", 12], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_book.rb:8:in `resolve'
  [1m[36mBook Destroy (1.2ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 12]]
  ↳ app/graphql/mutations/delete_book.rb:8:in `resolve'
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 1.3ms | Allocations: 1704)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:29 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}"}}
  [1m[36mBook Load (0.2ms)[0m  [1m[34mSELECT "books".* FROM "books" ORDER BY "books"."id" ASC[0m
Completed 200 OK in 5ms (Views: 0.5ms | ActiveRecord: 0.2ms | Allocations: 2727)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:30 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteBook", "variables"=>{"id"=>"13"}, "query"=>"mutation deleteBook($id: ID!) {\n  deleteBook(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteBook", "variables"=>{"id"=>"13"}, "query"=>"mutation deleteBook($id: ID!) {\n  deleteBook(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mBook Load (0.2ms)[0m  [1m[34mSELECT "books".* FROM "books" WHERE "books"."id" = ? LIMIT ?[0m  [["id", 13], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_book.rb:8:in `resolve'
  [1m[36mBook Destroy (1.4ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 13]]
  ↳ app/graphql/mutations/delete_book.rb:8:in `resolve'
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 1.6ms | Allocations: 1703)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:30 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}"}}
  [1m[36mBook Load (0.1ms)[0m  [1m[34mSELECT "books".* FROM "books" ORDER BY "books"."id" ASC[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.1ms | Allocations: 2649)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:30 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteBook", "variables"=>{"id"=>"14"}, "query"=>"mutation deleteBook($id: ID!) {\n  deleteBook(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteBook", "variables"=>{"id"=>"14"}, "query"=>"mutation deleteBook($id: ID!) {\n  deleteBook(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mBook Load (0.3ms)[0m  [1m[34mSELECT "books".* FROM "books" WHERE "books"."id" = ? LIMIT ?[0m  [["id", 14], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_book.rb:8:in `resolve'
  [1m[36mBook Destroy (1.9ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 14]]
  ↳ app/graphql/mutations/delete_book.rb:8:in `resolve'
Completed 200 OK in 8ms (Views: 0.3ms | ActiveRecord: 2.1ms | Allocations: 1703)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:30 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}"}}
  [1m[36mBook Load (0.2ms)[0m  [1m[34mSELECT "books".* FROM "books" ORDER BY "books"."id" ASC[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.2ms | Allocations: 2568)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:30 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteBook", "variables"=>{"id"=>"15"}, "query"=>"mutation deleteBook($id: ID!) {\n  deleteBook(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteBook", "variables"=>{"id"=>"15"}, "query"=>"mutation deleteBook($id: ID!) {\n  deleteBook(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mBook Load (0.2ms)[0m  [1m[34mSELECT "books".* FROM "books" WHERE "books"."id" = ? LIMIT ?[0m  [["id", 15], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_book.rb:8:in `resolve'
  [1m[36mBook Destroy (1.6ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 15]]
  ↳ app/graphql/mutations/delete_book.rb:8:in `resolve'
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 1.8ms | Allocations: 1703)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:30 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}"}}
  [1m[36mBook Load (0.1ms)[0m  [1m[34mSELECT "books".* FROM "books" ORDER BY "books"."id" ASC[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.1ms | Allocations: 2488)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:30 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteBook", "variables"=>{"id"=>"16"}, "query"=>"mutation deleteBook($id: ID!) {\n  deleteBook(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteBook", "variables"=>{"id"=>"16"}, "query"=>"mutation deleteBook($id: ID!) {\n  deleteBook(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mBook Load (0.1ms)[0m  [1m[34mSELECT "books".* FROM "books" WHERE "books"."id" = ? LIMIT ?[0m  [["id", 16], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_book.rb:8:in `resolve'
  [1m[36mBook Destroy (1.1ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 16]]
  ↳ app/graphql/mutations/delete_book.rb:8:in `resolve'
Completed 200 OK in 6ms (Views: 0.2ms | ActiveRecord: 1.3ms | Allocations: 1703)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:30 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}"}}
  [1m[36mBook Load (0.1ms)[0m  [1m[34mSELECT "books".* FROM "books" ORDER BY "books"."id" ASC[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.1ms | Allocations: 2408)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:30 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteBook", "variables"=>{"id"=>"17"}, "query"=>"mutation deleteBook($id: ID!) {\n  deleteBook(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteBook", "variables"=>{"id"=>"17"}, "query"=>"mutation deleteBook($id: ID!) {\n  deleteBook(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mBook Load (0.1ms)[0m  [1m[34mSELECT "books".* FROM "books" WHERE "books"."id" = ? LIMIT ?[0m  [["id", 17], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_book.rb:8:in `resolve'
  [1m[36mBook Destroy (0.8ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 17]]
  ↳ app/graphql/mutations/delete_book.rb:8:in `resolve'
Completed 200 OK in 3ms (Views: 0.1ms | ActiveRecord: 0.9ms | Allocations: 1705)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:30 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}"}}
  [1m[36mBook Load (0.1ms)[0m  [1m[34mSELECT "books".* FROM "books" ORDER BY "books"."id" ASC[0m
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 2328)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:30 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteBook", "variables"=>{"id"=>"18"}, "query"=>"mutation deleteBook($id: ID!) {\n  deleteBook(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteBook", "variables"=>{"id"=>"18"}, "query"=>"mutation deleteBook($id: ID!) {\n  deleteBook(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mBook Load (0.1ms)[0m  [1m[34mSELECT "books".* FROM "books" WHERE "books"."id" = ? LIMIT ?[0m  [["id", 18], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_book.rb:8:in `resolve'
  [1m[36mBook Destroy (0.9ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 18]]
  ↳ app/graphql/mutations/delete_book.rb:8:in `resolve'
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 1.0ms | Allocations: 1703)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:30 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}"}}
  [1m[36mBook Load (0.1ms)[0m  [1m[34mSELECT "books".* FROM "books" ORDER BY "books"."id" ASC[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 2248)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:30 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteBook", "variables"=>{"id"=>"19"}, "query"=>"mutation deleteBook($id: ID!) {\n  deleteBook(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteBook", "variables"=>{"id"=>"19"}, "query"=>"mutation deleteBook($id: ID!) {\n  deleteBook(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mBook Load (0.2ms)[0m  [1m[34mSELECT "books".* FROM "books" WHERE "books"."id" = ? LIMIT ?[0m  [["id", 19], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_book.rb:8:in `resolve'
  [1m[36mBook Destroy (1.0ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 19]]
  ↳ app/graphql/mutations/delete_book.rb:8:in `resolve'
Completed 200 OK in 6ms (Views: 0.1ms | ActiveRecord: 1.2ms | Allocations: 1703)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:30 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}"}}
  [1m[36mBook Load (0.1ms)[0m  [1m[34mSELECT "books".* FROM "books" ORDER BY "books"."id" ASC[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.1ms | Allocations: 2169)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:31 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteBook", "variables"=>{"id"=>"20"}, "query"=>"mutation deleteBook($id: ID!) {\n  deleteBook(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteBook", "variables"=>{"id"=>"20"}, "query"=>"mutation deleteBook($id: ID!) {\n  deleteBook(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mBook Load (0.3ms)[0m  [1m[34mSELECT "books".* FROM "books" WHERE "books"."id" = ? LIMIT ?[0m  [["id", 20], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_book.rb:8:in `resolve'
  [1m[36mBook Destroy (1.6ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 20]]
  ↳ app/graphql/mutations/delete_book.rb:8:in `resolve'
Completed 200 OK in 8ms (Views: 0.3ms | ActiveRecord: 1.9ms | Allocations: 1704)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:31 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}"}}
  [1m[36mBook Load (0.2ms)[0m  [1m[34mSELECT "books".* FROM "books" ORDER BY "books"."id" ASC[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.2ms | Allocations: 2089)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:32 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}"}}
  [1m[36mBook Load (0.2ms)[0m  [1m[34mSELECT "books".* FROM "books" ORDER BY "books"."id" ASC[0m
Completed 200 OK in 5ms (Views: 0.6ms | ActiveRecord: 0.2ms | Allocations: 2089)


Started GET "/graphiql" for ::1 at 2023-02-24 05:20:34 +0900
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb (Duration: 3.0ms | Allocations: 2560)
Completed 200 OK in 4ms (Views: 3.8ms | ActiveRecord: 0.0ms | Allocations: 3153)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:34 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 29ms (Views: 3.0ms | ActiveRecord: 0.0ms | Allocations: 25265)


Started POST "/graphql" for ::1 at 2023-02-24 05:20:35 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  books {\n    id\n    title\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"{\n  books {\n    id\n    title\n  }\n}", "variables"=>nil}}
  [1m[36mBook Load (0.1ms)[0m  [1m[34mSELECT "books".* FROM "books" ORDER BY "books"."id" ASC[0m
Completed 200 OK in 2ms (Views: 0.3ms | ActiveRecord: 0.1ms | Allocations: 1891)


Started POST "/graphql" for ::1 at 2023-02-24 05:32:32 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"books", "variables"=>{}, "query"=>"query books {\n  books {\n    id\n    title\n    __typename\n  }\n}"}}
  [1m[36mBook Load (0.5ms)[0m  [1m[34mSELECT "books".* FROM "books" ORDER BY "books"."id" ASC[0m
Completed 200 OK in 12ms (Views: 1.9ms | ActiveRecord: 0.8ms | Allocations: 2262)


Started POST "/graphql" for ::1 at 2023-02-24 16:15:47 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    __typename\n  }\n}"}}
Could not find table 'todos'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/sqlite3_adapter.rb:387:in `table_structure'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/abstract/schema_statements.rb:116:in `columns'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:117:in `block in columns'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:116:in `fetch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:116:in `columns'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:125:in `block in columns_hash'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:124:in `fetch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:124:in `columns_hash'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:580:in `load_schema!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/attributes.rb:264:in `load_schema!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/encryption/encryptable_record.rb:122:in `load_schema!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:566:in `block in load_schema'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:563:in `synchronize'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:563:in `load_schema'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:419:in `columns_hash'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1526:in `arel_column'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1655:in `order_column'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1619:in `block in preprocess_order_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1616:in `map!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1616:in `preprocess_order_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:434:in `order!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:429:in `order'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/queries/todos.rb:7:in `resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:107:in `public_send'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:107:in `block (3 levels) in resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:93:in `block (2 levels) in resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:84:in `block in resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:73:in `resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:684:in `public_send'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:684:in `block (2 levels) in resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:814:in `block in with_extensions'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:850:in `block (2 levels) in run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:853:in `run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:850:in `block in run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field_extension.rb:137:in `resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:837:in `run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:809:in `with_extensions'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:653:in `block in resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:651:in `resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:511:in `block (3 levels) in evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/tracing.rb:65:in `trace'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:510:in `block (2 levels) in evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:852:in `call_method_on_directives'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:507:in `block in evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:952:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:445:in `evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:435:in `evaluate_selection'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:368:in `block (2 levels) in evaluate_selections'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/dataloader.rb:181:in `block in run'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/dataloader.rb:306:in `block in spawn_fiber'
Completed 500 Internal Server Error in 39ms (Views: 0.5ms | ActiveRecord: 1.7ms | Allocations: 7765)


Started POST "/graphql" for ::1 at 2023-02-24 16:15:53 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    __typename\n  }\n}"}}
Could not find table 'todos'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/sqlite3_adapter.rb:387:in `table_structure'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/abstract/schema_statements.rb:116:in `columns'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:117:in `block in columns'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:116:in `fetch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:116:in `columns'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:125:in `block in columns_hash'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:124:in `fetch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:124:in `columns_hash'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:580:in `load_schema!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/attributes.rb:264:in `load_schema!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/encryption/encryptable_record.rb:122:in `load_schema!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:566:in `block in load_schema'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:563:in `synchronize'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:563:in `load_schema'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:419:in `columns_hash'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1526:in `arel_column'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1655:in `order_column'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1619:in `block in preprocess_order_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1616:in `map!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1616:in `preprocess_order_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:434:in `order!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:429:in `order'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/queries/todos.rb:7:in `resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:107:in `public_send'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:107:in `block (3 levels) in resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:93:in `block (2 levels) in resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:84:in `block in resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:73:in `resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:684:in `public_send'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:684:in `block (2 levels) in resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:814:in `block in with_extensions'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:850:in `block (2 levels) in run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:853:in `run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:850:in `block in run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field_extension.rb:137:in `resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:837:in `run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:809:in `with_extensions'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:653:in `block in resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:651:in `resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:511:in `block (3 levels) in evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/tracing.rb:65:in `trace'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:510:in `block (2 levels) in evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:852:in `call_method_on_directives'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:507:in `block in evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:952:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:445:in `evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:435:in `evaluate_selection'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:368:in `block (2 levels) in evaluate_selections'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/dataloader.rb:181:in `block in run'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/dataloader.rb:306:in `block in spawn_fiber'
Completed 500 Internal Server Error in 2ms (Views: 0.6ms | ActiveRecord: 0.1ms | Allocations: 1265)


Started POST "/graphql" for ::1 at 2023-02-24 16:16:00 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    __typename\n  }\n}"}}
Could not find table 'todos'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/sqlite3_adapter.rb:387:in `table_structure'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/abstract/schema_statements.rb:116:in `columns'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:117:in `block in columns'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:116:in `fetch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:116:in `columns'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:125:in `block in columns_hash'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:124:in `fetch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:124:in `columns_hash'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:580:in `load_schema!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/attributes.rb:264:in `load_schema!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/encryption/encryptable_record.rb:122:in `load_schema!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:566:in `block in load_schema'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:563:in `synchronize'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:563:in `load_schema'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:419:in `columns_hash'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1526:in `arel_column'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1655:in `order_column'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1619:in `block in preprocess_order_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1616:in `map!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1616:in `preprocess_order_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:434:in `order!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:429:in `order'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/queries/todos.rb:7:in `resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:107:in `public_send'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:107:in `block (3 levels) in resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:93:in `block (2 levels) in resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:84:in `block in resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:73:in `resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:684:in `public_send'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:684:in `block (2 levels) in resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:814:in `block in with_extensions'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:850:in `block (2 levels) in run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:853:in `run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:850:in `block in run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field_extension.rb:137:in `resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:837:in `run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:809:in `with_extensions'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:653:in `block in resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:651:in `resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:511:in `block (3 levels) in evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/tracing.rb:65:in `trace'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:510:in `block (2 levels) in evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:852:in `call_method_on_directives'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:507:in `block in evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:952:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:445:in `evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:435:in `evaluate_selection'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:368:in `block (2 levels) in evaluate_selections'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/dataloader.rb:181:in `block in run'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/dataloader.rb:306:in `block in spawn_fiber'
Completed 500 Internal Server Error in 13ms (Views: 6.1ms | ActiveRecord: 0.3ms | Allocations: 1106)


Started POST "/graphql" for ::1 at 2023-02-24 16:16:11 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    __typename\n  }\n}"}}
Could not find table 'todos'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/sqlite3_adapter.rb:387:in `table_structure'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/abstract/schema_statements.rb:116:in `columns'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:117:in `block in columns'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:116:in `fetch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:116:in `columns'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:125:in `block in columns_hash'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:124:in `fetch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:124:in `columns_hash'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:580:in `load_schema!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/attributes.rb:264:in `load_schema!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/encryption/encryptable_record.rb:122:in `load_schema!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:566:in `block in load_schema'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:563:in `synchronize'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:563:in `load_schema'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:419:in `columns_hash'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1526:in `arel_column'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1655:in `order_column'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1619:in `block in preprocess_order_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1616:in `map!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1616:in `preprocess_order_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:434:in `order!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:429:in `order'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/queries/todos.rb:7:in `resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:107:in `public_send'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:107:in `block (3 levels) in resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:93:in `block (2 levels) in resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:84:in `block in resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:73:in `resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:684:in `public_send'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:684:in `block (2 levels) in resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:814:in `block in with_extensions'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:850:in `block (2 levels) in run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:853:in `run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:850:in `block in run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field_extension.rb:137:in `resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:837:in `run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:809:in `with_extensions'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:653:in `block in resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:651:in `resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:511:in `block (3 levels) in evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/tracing.rb:65:in `trace'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:510:in `block (2 levels) in evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:852:in `call_method_on_directives'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:507:in `block in evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:952:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:445:in `evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:435:in `evaluate_selection'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:368:in `block (2 levels) in evaluate_selections'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/dataloader.rb:181:in `block in run'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/dataloader.rb:306:in `block in spawn_fiber'
Completed 500 Internal Server Error in 4ms (Views: 1.3ms | ActiveRecord: 0.1ms | Allocations: 1106)


Started POST "/graphql" for ::1 at 2023-02-24 16:16:12 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    __typename\n  }\n}"}}
Could not find table 'todos'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/sqlite3_adapter.rb:387:in `table_structure'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/abstract/schema_statements.rb:116:in `columns'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:117:in `block in columns'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:116:in `fetch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:116:in `columns'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:125:in `block in columns_hash'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:124:in `fetch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:124:in `columns_hash'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:580:in `load_schema!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/attributes.rb:264:in `load_schema!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/encryption/encryptable_record.rb:122:in `load_schema!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:566:in `block in load_schema'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:563:in `synchronize'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:563:in `load_schema'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:419:in `columns_hash'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1526:in `arel_column'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1655:in `order_column'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1619:in `block in preprocess_order_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1616:in `map!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1616:in `preprocess_order_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:434:in `order!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:429:in `order'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/queries/todos.rb:7:in `resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:107:in `public_send'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:107:in `block (3 levels) in resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:93:in `block (2 levels) in resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:84:in `block in resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:73:in `resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:684:in `public_send'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:684:in `block (2 levels) in resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:814:in `block in with_extensions'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:850:in `block (2 levels) in run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:853:in `run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:850:in `block in run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field_extension.rb:137:in `resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:837:in `run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:809:in `with_extensions'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:653:in `block in resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:651:in `resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:511:in `block (3 levels) in evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/tracing.rb:65:in `trace'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:510:in `block (2 levels) in evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:852:in `call_method_on_directives'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:507:in `block in evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:952:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:445:in `evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:435:in `evaluate_selection'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:368:in `block (2 levels) in evaluate_selections'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/dataloader.rb:181:in `block in run'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/dataloader.rb:306:in `block in spawn_fiber'
Completed 500 Internal Server Error in 3ms (Views: 0.3ms | ActiveRecord: 0.3ms | Allocations: 1106)


Started POST "/graphql" for ::1 at 2023-02-24 16:16:16 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    __typename\n  }\n}"}}
Could not find table 'todos'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/sqlite3_adapter.rb:387:in `table_structure'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/abstract/schema_statements.rb:116:in `columns'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:117:in `block in columns'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:116:in `fetch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:116:in `columns'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:125:in `block in columns_hash'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:124:in `fetch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:124:in `columns_hash'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:580:in `load_schema!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/attributes.rb:264:in `load_schema!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/encryption/encryptable_record.rb:122:in `load_schema!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:566:in `block in load_schema'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:563:in `synchronize'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:563:in `load_schema'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:419:in `columns_hash'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1526:in `arel_column'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1655:in `order_column'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1619:in `block in preprocess_order_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1616:in `map!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1616:in `preprocess_order_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:434:in `order!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:429:in `order'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/queries/todos.rb:7:in `resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:107:in `public_send'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:107:in `block (3 levels) in resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:93:in `block (2 levels) in resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:84:in `block in resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:73:in `resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:684:in `public_send'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:684:in `block (2 levels) in resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:814:in `block in with_extensions'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:850:in `block (2 levels) in run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:853:in `run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:850:in `block in run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field_extension.rb:137:in `resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:837:in `run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:809:in `with_extensions'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:653:in `block in resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:651:in `resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:511:in `block (3 levels) in evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/tracing.rb:65:in `trace'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:510:in `block (2 levels) in evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:852:in `call_method_on_directives'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:507:in `block in evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:952:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:445:in `evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:435:in `evaluate_selection'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:368:in `block (2 levels) in evaluate_selections'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/dataloader.rb:181:in `block in run'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/dataloader.rb:306:in `block in spawn_fiber'
Completed 500 Internal Server Error in 7ms (Views: 0.6ms | ActiveRecord: 0.1ms | Allocations: 1106)


Started POST "/graphql" for ::1 at 2023-02-24 16:16:20 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    __typename\n  }\n}"}}
Could not find table 'todos'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/sqlite3_adapter.rb:387:in `table_structure'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/abstract/schema_statements.rb:116:in `columns'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:117:in `block in columns'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:116:in `fetch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:116:in `columns'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:125:in `block in columns_hash'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:124:in `fetch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:124:in `columns_hash'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:580:in `load_schema!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/attributes.rb:264:in `load_schema!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/encryption/encryptable_record.rb:122:in `load_schema!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:566:in `block in load_schema'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:563:in `synchronize'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:563:in `load_schema'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:419:in `columns_hash'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1526:in `arel_column'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1655:in `order_column'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1619:in `block in preprocess_order_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1616:in `map!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1616:in `preprocess_order_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:434:in `order!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:429:in `order'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/queries/todos.rb:7:in `resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:107:in `public_send'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:107:in `block (3 levels) in resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:93:in `block (2 levels) in resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:84:in `block in resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:73:in `resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:684:in `public_send'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:684:in `block (2 levels) in resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:814:in `block in with_extensions'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:850:in `block (2 levels) in run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:853:in `run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:850:in `block in run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field_extension.rb:137:in `resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:837:in `run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:809:in `with_extensions'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:653:in `block in resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:651:in `resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:511:in `block (3 levels) in evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/tracing.rb:65:in `trace'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:510:in `block (2 levels) in evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:852:in `call_method_on_directives'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:507:in `block in evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:952:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:445:in `evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:435:in `evaluate_selection'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:368:in `block (2 levels) in evaluate_selections'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/dataloader.rb:181:in `block in run'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/dataloader.rb:306:in `block in spawn_fiber'
Completed 500 Internal Server Error in 4ms (Views: 0.5ms | ActiveRecord: 0.1ms | Allocations: 1106)


Started POST "/graphql" for ::1 at 2023-02-24 16:16:26 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    __typename\n  }\n}"}}
Could not find table 'todos'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/sqlite3_adapter.rb:387:in `table_structure'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/abstract/schema_statements.rb:116:in `columns'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:117:in `block in columns'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:116:in `fetch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:116:in `columns'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:125:in `block in columns_hash'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:124:in `fetch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:124:in `columns_hash'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:580:in `load_schema!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/attributes.rb:264:in `load_schema!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/encryption/encryptable_record.rb:122:in `load_schema!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:566:in `block in load_schema'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:563:in `synchronize'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:563:in `load_schema'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:419:in `columns_hash'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1526:in `arel_column'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1655:in `order_column'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1619:in `block in preprocess_order_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1616:in `map!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1616:in `preprocess_order_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:434:in `order!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:429:in `order'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/queries/todos.rb:7:in `resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:107:in `public_send'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:107:in `block (3 levels) in resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:93:in `block (2 levels) in resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:84:in `block in resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:73:in `resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:684:in `public_send'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:684:in `block (2 levels) in resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:814:in `block in with_extensions'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:850:in `block (2 levels) in run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:853:in `run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:850:in `block in run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field_extension.rb:137:in `resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:837:in `run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:809:in `with_extensions'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:653:in `block in resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:651:in `resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:511:in `block (3 levels) in evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/tracing.rb:65:in `trace'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:510:in `block (2 levels) in evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:852:in `call_method_on_directives'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:507:in `block in evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:952:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:445:in `evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:435:in `evaluate_selection'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:368:in `block (2 levels) in evaluate_selections'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/dataloader.rb:181:in `block in run'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/dataloader.rb:306:in `block in spawn_fiber'
Completed 500 Internal Server Error in 8ms (Views: 0.6ms | ActiveRecord: 0.3ms | Allocations: 1106)


  [1m[36mActiveRecord::SchemaMigration Pluck (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[36mActiveRecord::SchemaMigration Pluck (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::SchemaMigration Pluck (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::SchemaMigration Pluck (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.5ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[36mActiveRecord::SchemaMigration Pluck (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::SchemaMigration Pluck (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Started POST "/graphql" for ::1 at 2023-02-24 16:17:04 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    __typename\n  }\n}"}}
Could not find table 'todos'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/sqlite3_adapter.rb:387:in `table_structure'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/abstract/schema_statements.rb:116:in `columns'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:117:in `block in columns'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:116:in `fetch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:116:in `columns'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:125:in `block in columns_hash'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:124:in `fetch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/connection_adapters/schema_cache.rb:124:in `columns_hash'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:580:in `load_schema!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/attributes.rb:264:in `load_schema!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/encryption/encryptable_record.rb:122:in `load_schema!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:566:in `block in load_schema'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:563:in `synchronize'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:563:in `load_schema'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/model_schema.rb:419:in `columns_hash'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1526:in `arel_column'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1655:in `order_column'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1619:in `block in preprocess_order_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1616:in `map!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:1616:in `preprocess_order_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:434:in `order!'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/relation/query_methods.rb:429:in `order'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/queries/todos.rb:7:in `resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:107:in `public_send'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:107:in `block (3 levels) in resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:93:in `block (2 levels) in resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:84:in `block in resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/resolver.rb:73:in `resolve_with_support'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:684:in `public_send'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:684:in `block (2 levels) in resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:814:in `block in with_extensions'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:850:in `block (2 levels) in run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:853:in `run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:850:in `block in run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field_extension.rb:137:in `resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:837:in `run_extensions_before_resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:809:in `with_extensions'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:653:in `block in resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema.rb:1040:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/schema/field.rb:651:in `resolve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:511:in `block (3 levels) in evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/tracing.rb:65:in `trace'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:510:in `block (2 levels) in evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:852:in `call_method_on_directives'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:507:in `block in evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:952:in `after_lazy'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:445:in `evaluate_selection_with_args'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:435:in `evaluate_selection'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/execution/interpreter/runtime.rb:368:in `block (2 levels) in evaluate_selections'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/dataloader.rb:181:in `block in run'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/graphql-2.0.17/lib/graphql/dataloader.rb:306:in `block in spawn_fiber'
Completed 500 Internal Server Error in 18ms (Views: 0.4ms | ActiveRecord: 0.2ms | Allocations: 7329)


Started POST "/graphql" for ::1 at 2023-02-24 16:17:07 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"dfafd"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"dfafd"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
Completed 200 OK in 6ms (Views: 0.2ms | ActiveRecord: 0.2ms | Allocations: 1625)


  [1m[36mActiveRecord::SchemaMigration Pluck (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[36mActiveRecord::SchemaMigration Pluck (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::SchemaMigration Pluck (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::SchemaMigration Pluck (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::SchemaMigration Pluck (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Started GET "/graphiql" for ::1 at 2023-02-24 16:49:57 +0900
  [1m[36mActiveRecord::SchemaMigration Pluck (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mCACHE ActiveRecord::SchemaMigration Pluck (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  
ActiveRecord::PendingMigrationError (

Migrations are pending. To resolve this issue, run:

        bin/rails db:migrate RAILS_ENV=development

You have 1 pending migration:

20230224074223_create_todos.rb


):
  
activerecord (7.0.4.2) lib/active_record/migration.rb:627:in `check_pending!'
activerecord (7.0.4.2) lib/active_record/migration.rb:592:in `block (2 levels) in call'
activesupport (7.0.4.2) lib/active_support/file_update_checker.rb:83:in `execute'
activerecord (7.0.4.2) lib/active_record/migration.rb:597:in `block in call'
activerecord (7.0.4.2) lib/active_record/migration.rb:589:in `synchronize'
activerecord (7.0.4.2) lib/active_record/migration.rb:589:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/callbacks.rb:27:in `block in call'
activesupport (7.0.4.2) lib/active_support/callbacks.rb:99:in `run_callbacks'
actionpack (7.0.4.2) lib/action_dispatch/middleware/callbacks.rb:26:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/actionable_exceptions.rb:17:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/debug_exceptions.rb:28:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/show_exceptions.rb:26:in `call'
railties (7.0.4.2) lib/rails/rack/logger.rb:40:in `call_app'
railties (7.0.4.2) lib/rails/rack/logger.rb:25:in `block in call'
activesupport (7.0.4.2) lib/active_support/tagged_logging.rb:99:in `block in tagged'
activesupport (7.0.4.2) lib/active_support/tagged_logging.rb:37:in `tagged'
activesupport (7.0.4.2) lib/active_support/tagged_logging.rb:99:in `tagged'
railties (7.0.4.2) lib/rails/rack/logger.rb:25:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/remote_ip.rb:93:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/request_id.rb:26:in `call'
rack (2.2.6.2) lib/rack/runtime.rb:22:in `call'
activesupport (7.0.4.2) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/server_timing.rb:61:in `block in call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/server_timing.rb:26:in `collect_events'
actionpack (7.0.4.2) lib/action_dispatch/middleware/server_timing.rb:60:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/static.rb:23:in `call'
rack (2.2.6.2) lib/rack/sendfile.rb:110:in `call'
actionpack (7.0.4.2) lib/action_dispatch/middleware/host_authorization.rb:137:in `call'
rack-cors (2.0.0) lib/rack/cors.rb:102:in `call'
railties (7.0.4.2) lib/rails/engine.rb:530:in `call'
puma (5.6.5) lib/puma/configuration.rb:252:in `call'
puma (5.6.5) lib/puma/request.rb:77:in `block in handle_request'
puma (5.6.5) lib/puma/thread_pool.rb:340:in `with_force_shutdown'
puma (5.6.5) lib/puma/request.rb:76:in `handle_request'
puma (5.6.5) lib/puma/server.rb:443:in `process_client'
puma (5.6.5) lib/puma/thread_pool.rb:147:in `block in spawn_thread'
  [1m[36mActiveRecord::SchemaMigration Pluck (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateTodos (20230224074223)
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE TABLE "todos" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar, "created_at" datetime(6) NOT NULL, "updated_at" datetime(6) NOT NULL)[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20230224074223"]]
  [1m[36mTRANSACTION (1.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[36mActiveRecord::SchemaMigration Pluck (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::SchemaMigration Pluck (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mTodo Create (0.2ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "めも 1"], ["created_at", "2023-02-24 07:50:22.193598"], ["updated_at", "2023-02-24 07:50:22.193598"]]
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mTodo Create (0.2ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "めも 2"], ["created_at", "2023-02-24 07:50:22.195421"], ["updated_at", "2023-02-24 07:50:22.195421"]]
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mTodo Create (0.1ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "めも 3"], ["created_at", "2023-02-24 07:50:22.196599"], ["updated_at", "2023-02-24 07:50:22.196599"]]
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[36mcommit transaction[0m
Started GET "/graphiql" for ::1 at 2023-02-24 16:50:24 +0900
  [1m[36mActiveRecord::SchemaMigration Pluck (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb (Duration: 31.7ms | Allocations: 12347)
Completed 200 OK in 36ms (Views: 32.8ms | ActiveRecord: 0.0ms | Allocations: 14278)


Started GET "/assets/graphiql/rails/application-5bb68625e0c7ddf3eece980e20001faed96197d338dca5fa33e0f5da8a060deb.css" for ::1 at 2023-02-24 16:50:24 +0900
Started GET "/assets/graphiql/rails/application-d78230954080343c556e7465ad58ff8802dc2c2455d2e14983801a14c3dd0036.js" for ::1 at 2023-02-24 16:50:24 +0900
Started POST "/graphql" for ::1 at 2023-02-24 16:50:24 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 31ms (Views: 2.5ms | ActiveRecord: 0.0ms | Allocations: 32735)


Started POST "/graphql" for ::1 at 2023-02-24 16:50:25 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  books {\n    id\n    title\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"{\n  books {\n    id\n    title\n  }\n}", "variables"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms | Allocations: 689)


Started POST "/graphql" for ::1 at 2023-02-24 16:50:29 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  todos {\n    id\n    title\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"{\n  todos {\n    id\n    title\n  }\n}", "variables"=>nil}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 32ms (Views: 1.9ms | ActiveRecord: 0.5ms | Allocations: 7637)


Started POST "/graphql" for ::1 at 2023-02-24 16:50:33 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  todos {\n    id\n    title\n    updatedAt\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"{\n  todos {\n    id\n    title\n    updatedAt\n  }\n}", "variables"=>nil}}
  [1m[36mTodo Load (3.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 14ms (Views: 3.2ms | ActiveRecord: 3.2ms | Allocations: 1708)


Started GET "/graphiql" for ::1 at 2023-02-24 16:59:06 +0900
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered vendor/bundle/ruby/3.1.0/gems/graphiql-rails-1.8.0/app/views/graphiql/rails/editors/show.html.erb (Duration: 2.5ms | Allocations: 2564)
Completed 200 OK in 3ms (Views: 2.9ms | Allocations: 3150)


Started POST "/graphql" for ::1 at 2023-02-24 16:59:06 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Completed 200 OK in 46ms (Views: 3.1ms | Allocations: 31219)


Started POST "/graphql" for ::1 at 2023-02-24 16:59:08 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  todos {\n    id\n    title\n    updatedAt\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"{\n  todos {\n    id\n    title\n    updatedAt\n  }\n}", "variables"=>nil}}
  [1m[36mTodo Load (0.9ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 12ms (Views: 0.3ms | ActiveRecord: 1.5ms | Allocations: 3646)


Started POST "/graphql" for ::1 at 2023-02-24 16:59:19 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 6ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 1519)


Started POST "/graphql" for ::1 at 2023-02-24 16:59:54 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.1ms | Allocations: 1369)


Started POST "/graphql" for ::1 at 2023-02-24 16:59:56 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"3123"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      updated_at\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"3123"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      updated_at\n      __typename\n    }\n    __typename\n  }\n}"}}
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.0ms | Allocations: 1132)


Started POST "/graphql" for ::1 at 2023-02-24 17:00:15 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 17ms (Views: 1.1ms | ActiveRecord: 0.2ms | Allocations: 1369)


Started POST "/graphql" for ::1 at 2023-02-24 17:00:18 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"3213"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      updated_at\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"3213"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      updated_at\n      __typename\n    }\n    __typename\n  }\n}"}}
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.0ms | Allocations: 933)


Started POST "/graphql" for ::1 at 2023-02-24 17:10:28 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.9ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 26ms (Views: 0.3ms | ActiveRecord: 1.5ms | Allocations: 1644)


Started POST "/graphql" for ::1 at 2023-02-24 17:10:30 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 1508)


Started POST "/graphql" for ::1 at 2023-02-24 17:10:32 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"dasds"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"dasds"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (1.0ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "dasds"], ["created_at", "2023-02-24 08:10:32.266539"], ["updated_at", "2023-02-24 08:10:32.266539"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (1.5ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 2.6ms | Allocations: 3490)


Started POST "/graphql" for ::1 at 2023-02-24 17:10:32 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 1627)


Started POST "/graphql" for ::1 at 2023-02-24 17:10:34 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"dsadasd"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"dsadasd"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (0.8ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "dsadasd"], ["created_at", "2023-02-24 08:10:34.756540"], ["updated_at", "2023-02-24 08:10:34.756540"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (1.8ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 2.6ms | Allocations: 2729)


Started POST "/graphql" for ::1 at 2023-02-24 17:10:34 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 1746)


Started POST "/graphql" for ::1 at 2023-02-24 17:10:53 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updated_at\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updated_at\n    __typename\n  }\n}"}}
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.0ms | Allocations: 673)


Started POST "/graphql" for ::1 at 2023-02-24 17:10:56 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updated_at\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updated_at\n    __typename\n  }\n}"}}
Completed 200 OK in 1ms (Views: 0.1ms | ActiveRecord: 0.0ms | Allocations: 673)


Started POST "/graphql" for ::1 at 2023-02-24 17:10:59 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 30ms (Views: 0.4ms | ActiveRecord: 0.2ms | Allocations: 1745)


Started POST "/graphql" for ::1 at 2023-02-24 17:12:33 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 7ms (Views: 0.3ms | ActiveRecord: 0.2ms | Allocations: 1745)


Started POST "/graphql" for ::1 at 2023-02-24 17:12:34 +0900
Started POST "/graphql" for ::1 at 2023-02-24 17:12:34 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 1f"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 1f"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 1d"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 1d"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mTodo Load (0.5ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mTodo Update (0.3ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 1f"], ["updated_at", "2023-02-24 08:12:35.000864"], ["id", 1]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (2.0ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (5186.0ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 1d"], ["updated_at", "2023-02-24 08:12:35.002024"], ["id", 1]]
Completed 200 OK in 5227ms (Views: 0.4ms | ActiveRecord: 2.5ms | Allocations: 9582)


  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[31mrollback transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Started POST "/graphql" for ::1 at 2023-02-24 17:12:40 +0900
Completed 200 OK in 5235ms (Views: 0.4ms | ActiveRecord: 5186.8ms | Allocations: 9449)


Started POST "/graphql" for ::1 at 2023-02-24 17:12:40 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 1a"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 1a"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
Started POST "/graphql" for ::1 at 2023-02-24 17:12:40 +0900
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.4ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 1a"], ["updated_at", "2023-02-24 08:12:40.237808"], ["id", 1]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (1.0ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 19ms (Views: 0.1ms | ActiveRecord: 1.6ms | Allocations: 3771)


Started POST "/graphql" for ::1 at 2023-02-24 17:12:40 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 1s"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 1s"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.2ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 1s"], ["updated_at", "2023-02-24 08:12:40.262120"], ["id", 1]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.6ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 6ms (Views: 0.1ms | ActiveRecord: 0.9ms | Allocations: 3343)


Started POST "/graphql" for ::1 at 2023-02-24 17:12:40 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 1d"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 1d"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
Started POST "/graphql" for ::1 at 2023-02-24 17:12:40 +0900
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.2ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 1d"], ["updated_at", "2023-02-24 08:12:40.275728"], ["id", 1]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (1.3ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 8ms (Views: 0.1ms | ActiveRecord: 1.6ms | Allocations: 3558)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 1a"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 1a"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.2ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 1a"], ["updated_at", "2023-02-24 08:12:40.285560"], ["id", 1]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 6ms (Views: 0.1ms | ActiveRecord: 0.6ms | Allocations: 3484)


Started POST "/graphql" for ::1 at 2023-02-24 17:12:40 +0900
Started POST "/graphql" for ::1 at 2023-02-24 17:12:40 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 1d"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 1d"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.2ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 1d"], ["updated_at", "2023-02-24 08:12:40.298150"], ["id", 1]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 6ms (Views: 0.1ms | ActiveRecord: 0.6ms | Allocations: 3684)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 1f"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 1f"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.2ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 1f"], ["updated_at", "2023-02-24 08:12:40.305159"], ["id", 1]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.6ms | Allocations: 3581)


Started POST "/graphql" for ::1 at 2023-02-24 17:12:40 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 13"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 13"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.2ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 13"], ["updated_at", "2023-02-24 08:12:40.312859"], ["id", 1]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 10ms (Views: 0.1ms | ActiveRecord: 0.7ms | Allocations: 3449)


Started POST "/graphql" for ::1 at 2023-02-24 17:12:40 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 12"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 12"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.2ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 12"], ["updated_at", "2023-02-24 08:12:40.328333"], ["id", 1]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 5ms (Views: 0.1ms | ActiveRecord: 0.7ms | Allocations: 3384)


Started POST "/graphql" for ::1 at 2023-02-24 17:12:40 +0900
Started POST "/graphql" for ::1 at 2023-02-24 17:12:40 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 11"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 11"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.2ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 11"], ["updated_at", "2023-02-24 08:12:40.340065"], ["id", 1]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 5ms (Views: 0.1ms | ActiveRecord: 0.6ms | Allocations: 3390)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 13"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 13"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.2ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 13"], ["updated_at", "2023-02-24 08:12:40.346557"], ["id", 1]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 6ms (Views: 0.1ms | ActiveRecord: 0.7ms | Allocations: 3509)


Started POST "/graphql" for ::1 at 2023-02-24 17:12:40 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 12"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 12"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.2ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 12"], ["updated_at", "2023-02-24 08:12:40.357306"], ["id", 1]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.6ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 5ms (Views: 0.1ms | ActiveRecord: 0.8ms | Allocations: 3385)


Started POST "/graphql" for ::1 at 2023-02-24 17:12:40 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 1d"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 1d"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.2ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 1d"], ["updated_at", "2023-02-24 08:12:40.366443"], ["id", 1]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 5ms (Views: 0.1ms | ActiveRecord: 0.6ms | Allocations: 3344)


Started POST "/graphql" for ::1 at 2023-02-24 17:12:40 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 11"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 11"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.2ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 11"], ["updated_at", "2023-02-24 08:12:40.376338"], ["id", 1]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[36mcommit transaction[0m
Started POST "/graphql" for ::1 at 2023-02-24 17:12:40 +0900
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 5ms (Views: 0.1ms | ActiveRecord: 0.6ms | Allocations: 3570)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 1a"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 1a"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.2ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 1a"], ["updated_at", "2023-02-24 08:12:40.387620"], ["id", 1]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 4ms (Views: 0.1ms | ActiveRecord: 0.6ms | Allocations: 3408)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 1s"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 1s"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.3ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 1s"], ["updated_at", "2023-02-24 08:12:40.393219"], ["id", 1]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Started POST "/graphql" for ::1 at 2023-02-24 17:12:40 +0900
Completed 200 OK in 6ms (Views: 0.1ms | ActiveRecord: 0.9ms | Allocations: 3641)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 1f"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 1f"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.2ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 1f"], ["updated_at", "2023-02-24 08:12:40.402329"], ["id", 1]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 4ms (Views: 0.1ms | ActiveRecord: 0.7ms | Allocations: 3334)


Started POST "/graphql" for ::1 at 2023-02-24 17:12:40 +0900
Started POST "/graphql" for ::1 at 2023-02-24 17:12:40 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 1a"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 1a"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.3ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 1a"], ["updated_at", "2023-02-24 08:12:40.413409"], ["id", 1]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 4ms (Views: 0.1ms | ActiveRecord: 0.8ms | Allocations: 3309)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 1e"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 1e"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.2ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 1e"], ["updated_at", "2023-02-24 08:12:40.420515"], ["id", 1]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 4ms (Views: 0.1ms | ActiveRecord: 0.6ms | Allocations: 3337)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"fesafd"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"fesafd"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (0.2ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "fesafd"], ["created_at", "2023-02-24 08:12:40.424581"], ["updated_at", "2023-02-24 08:12:40.424581"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (0.5ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 4ms (Views: 0.1ms | ActiveRecord: 0.8ms | Allocations: 2775)


Started POST "/graphql" for ::1 at 2023-02-24 17:12:40 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.3ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.3ms | Allocations: 1907)


Started POST "/graphql" for ::1 at 2023-02-24 17:12:40 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 1f"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"1", "params"=>{"title"=>"めも 1f"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.3ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 1f"], ["updated_at", "2023-02-24 08:12:40.607334"], ["id", 1]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.7ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 5ms (Views: 0.1ms | ActiveRecord: 1.1ms | Allocations: 3297)


Started POST "/graphql" for ::1 at 2023-02-24 17:13:02 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 7ms (Views: 0.3ms | ActiveRecord: 0.2ms | Allocations: 1863)


Started POST "/graphql" for ::1 at 2023-02-24 17:13:04 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"sfdasdf"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"sfdasdf"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (0.5ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "sfdasdf"], ["created_at", "2023-02-24 08:13:04.453758"], ["updated_at", "2023-02-24 08:13:04.453758"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (1.2ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 1.7ms | Allocations: 2729)


Started POST "/graphql" for ::1 at 2023-02-24 17:13:04 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.1ms | Allocations: 1981)


Started POST "/graphql" for ::1 at 2023-02-24 17:13:06 +0900
Started POST "/graphql" for ::1 at 2023-02-24 17:13:06 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"dめも 2"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"dめも 2"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 2], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.3ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "dめも 2"], ["updated_at", "2023-02-24 08:13:06.235434"], ["id", 2]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.6ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 10ms (Views: 0.1ms | ActiveRecord: 1.2ms | Allocations: 3345)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"めも 2s"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"めも 2s"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 2], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.3ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 2s"], ["updated_at", "2023-02-24 08:13:06.243822"], ["id", 2]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.7ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 8ms (Views: 0.2ms | ActiveRecord: 1.2ms | Allocations: 3284)


Started POST "/graphql" for ::1 at 2023-02-24 17:13:06 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"めも 2sf"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"めも 2sf"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 2], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.3ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 2sf"], ["updated_at", "2023-02-24 08:13:06.356756"], ["id", 2]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (1.3ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 9ms (Views: 0.1ms | ActiveRecord: 1.9ms | Allocations: 3284)


Started POST "/graphql" for ::1 at 2023-02-24 17:13:06 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"めも 2sfs"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"めも 2sfs"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.5ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 2], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.5ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 2sfs"], ["updated_at", "2023-02-24 08:13:06.502206"], ["id", 2]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.5ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 15ms (Views: 0.1ms | ActiveRecord: 1.7ms | Allocations: 3285)


Started POST "/graphql" for ::1 at 2023-02-24 17:13:06 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"めも 2sfd"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"めも 2sfd"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 2], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.3ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 2sfd"], ["updated_at", "2023-02-24 08:13:06.534827"], ["id", 2]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 5ms (Views: 0.1ms | ActiveRecord: 0.8ms | Allocations: 3284)


Started POST "/graphql" for ::1 at 2023-02-24 17:13:06 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"めも 2sfdf"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"めも 2sfdf"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 2], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.5ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 2sfdf"], ["updated_at", "2023-02-24 08:13:06.614890"], ["id", 2]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (1.0ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 11ms (Views: 0.1ms | ActiveRecord: 1.7ms | Allocations: 3284)


Started POST "/graphql" for ::1 at 2023-02-24 17:13:06 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"めも 2sfdfs"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"めも 2sfdfs"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.5ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 2], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.6ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 2sfdfs"], ["updated_at", "2023-02-24 08:13:06.769241"], ["id", 2]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.9ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 14ms (Views: 0.2ms | ActiveRecord: 2.2ms | Allocations: 3284)


Started POST "/graphql" for ::1 at 2023-02-24 17:13:06 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"めも 2sfdfd"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"めも 2sfdfd"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 2], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.2ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 2sfdfd"], ["updated_at", "2023-02-24 08:13:06.801478"], ["id", 2]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 6ms (Views: 0.1ms | ActiveRecord: 0.7ms | Allocations: 3284)


Started POST "/graphql" for ::1 at 2023-02-24 17:13:06 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"めも 2sfdfdf"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"めも 2sfdfdf"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 2], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.2ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 2sfdfdf"], ["updated_at", "2023-02-24 08:13:06.881478"], ["id", 2]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 7ms (Views: 0.3ms | ActiveRecord: 0.9ms | Allocations: 3284)


Started POST "/graphql" for ::1 at 2023-02-24 17:13:07 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"めも 2sfdfdfs"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"めも 2sfdfdfs"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 2], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.5ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 2sfdfdfs"], ["updated_at", "2023-02-24 08:13:07.027303"], ["id", 2]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.9ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 1.6ms | Allocations: 3285)


Started POST "/graphql" for ::1 at 2023-02-24 17:13:08 +0900
Started POST "/graphql" for ::1 at 2023-02-24 17:13:08 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"めも 2sfdfdfsd"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"めも 2sfdfdfsd"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 2], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.2ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 2sfdfdfsd"], ["updated_at", "2023-02-24 08:13:08.477571"], ["id", 2]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.5ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 7ms (Views: 0.1ms | ActiveRecord: 0.8ms | Allocations: 3400)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"めも 2sfdfdfss"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"めも 2sfdfdfss"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 2], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.2ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 2sfdfdfss"], ["updated_at", "2023-02-24 08:13:08.485598"], ["id", 2]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.7ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 5ms (Views: 0.1ms | ActiveRecord: 1.0ms | Allocations: 3284)


Started POST "/graphql" for ::1 at 2023-02-24 17:13:08 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"めも 2sfdfdfssf"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"めも 2sfdfdfssf"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 2], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.3ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 2sfdfdfssf"], ["updated_at", "2023-02-24 08:13:08.522773"], ["id", 2]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.7ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 5ms (Views: 0.1ms | ActiveRecord: 1.1ms | Allocations: 3284)


Started POST "/graphql" for ::1 at 2023-02-24 17:13:08 +0900
Started POST "/graphql" for ::1 at 2023-02-24 17:13:08 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"めも 2sfdfdfssfs"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"めも 2sfdfdfssfs"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.3ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 2], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.3ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 2sfdfdfssfs"], ["updated_at", "2023-02-24 08:13:08.719013"], ["id", 2]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"めも 2sfdfdfssfd"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"めも 2sfdfdfssfd"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 2], ["LIMIT", 1]]
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
Completed 200 OK in 16ms (Views: 0.3ms | ActiveRecord: 1.0ms | Allocations: 5324)


  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.2ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 2sfdfdfssfd"], ["updated_at", "2023-02-24 08:13:08.727704"], ["id", 2]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 9ms (Views: 0.2ms | ActiveRecord: 0.8ms | Allocations: 4143)


Started POST "/graphql" for ::1 at 2023-02-24 17:13:08 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"めも 2sfdfdfssfdf"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"2", "params"=>{"title"=>"めも 2sfdfdfssfdf"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 2], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.2ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "めも 2sfdfdfssfdf"], ["updated_at", "2023-02-24 08:13:08.789269"], ["id", 2]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 4ms (Views: 0.1ms | ActiveRecord: 0.6ms | Allocations: 3285)


Started POST "/graphql" for ::1 at 2023-02-24 17:13:44 +0900
Started POST "/graphql" for ::1 at 2023-02-24 17:13:44 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"5", "params"=>{"title"=>"dsadasda"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"5", "params"=>{"title"=>"dsadasda"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 5], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
Processing by GraphqlController#execute as */*
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"5", "params"=>{"title"=>"dsadasds"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"5", "params"=>{"title"=>"dsadasds"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Update (0.2ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "dsadasda"], ["updated_at", "2023-02-24 08:13:44.542200"], ["id", 5]]
  [1m[36mTodo Load (0.5ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 5], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.9ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
Completed 200 OK in 7ms (Views: 0.1ms | ActiveRecord: 1.2ms | Allocations: 4942)


  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.2ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "dsadasds"], ["updated_at", "2023-02-24 08:13:44.546948"], ["id", 5]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.5ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 8ms (Views: 0.1ms | ActiveRecord: 1.2ms | Allocations: 4668)


Started POST "/graphql" for ::1 at 2023-02-24 17:13:44 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"5", "params"=>{"title"=>"dsadasdsd"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"5", "params"=>{"title"=>"dsadasdsd"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 5], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.2ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "dsadasdsd"], ["updated_at", "2023-02-24 08:13:44.657172"], ["id", 5]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 6ms (Views: 0.1ms | ActiveRecord: 0.8ms | Allocations: 3285)


Started POST "/graphql" for ::1 at 2023-02-24 17:13:44 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"5", "params"=>{"title"=>"dsadasdsda"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"5", "params"=>{"title"=>"dsadasdsda"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 5], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.6ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "dsadasdsda"], ["updated_at", "2023-02-24 08:13:44.769906"], ["id", 5]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (1.4ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 12ms (Views: 0.3ms | ActiveRecord: 2.3ms | Allocations: 3284)


Started POST "/graphql" for ::1 at 2023-02-24 17:13:44 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"5", "params"=>{"title"=>"dsadasdsdas"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"5", "params"=>{"title"=>"dsadasdsdas"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 5], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.2ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "dsadasdsdas"], ["updated_at", "2023-02-24 08:13:44.810628"], ["id", 5]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 4ms (Views: 0.1ms | ActiveRecord: 0.8ms | Allocations: 3284)


Started POST "/graphql" for ::1 at 2023-02-24 17:13:44 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"5", "params"=>{"title"=>"dsadasdsdasd"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"5", "params"=>{"title"=>"dsadasdsdasd"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 5], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.6ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "dsadasdsdasd"], ["updated_at", "2023-02-24 08:13:44.883179"], ["id", 5]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (1.6ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 10ms (Views: 0.1ms | ActiveRecord: 2.4ms | Allocations: 3284)


Started POST "/graphql" for ::1 at 2023-02-24 17:13:45 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"5", "params"=>{"title"=>"dsadasdsdasda"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"5", "params"=>{"title"=>"dsadasdsdasda"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 5], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.6ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "dsadasdsdasda"], ["updated_at", "2023-02-24 08:13:45.029072"], ["id", 5]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (1.5ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 2.4ms | Allocations: 3284)


Started POST "/graphql" for ::1 at 2023-02-24 17:14:06 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"2"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"2"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (1.0ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 2], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (2.1ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 2]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 36ms (Views: 0.5ms | ActiveRecord: 3.1ms | Allocations: 1808)


Started POST "/graphql" for ::1 at 2023-02-24 17:14:06 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 4ms (Views: 0.5ms | ActiveRecord: 0.1ms | Allocations: 1863)


Started POST "/graphql" for ::1 at 2023-02-24 17:14:08 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"dsadf"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"dsadf"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (0.6ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "dsadf"], ["created_at", "2023-02-24 08:14:09.010806"], ["updated_at", "2023-02-24 08:14:09.010806"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (0.9ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 11ms (Views: 0.3ms | ActiveRecord: 1.7ms | Allocations: 2729)


Started POST "/graphql" for ::1 at 2023-02-24 17:14:09 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.1ms | Allocations: 1981)


Started POST "/graphql" for ::1 at 2023-02-24 17:14:11 +0900
Started POST "/graphql" for ::1 at 2023-02-24 17:14:11 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"7", "params"=>{"title"=>"sfdasdfd"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"7", "params"=>{"title"=>"sfdasdfd"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 7], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.4ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "sfdasdfd"], ["updated_at", "2023-02-24 08:14:12.005908"], ["id", 7]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.6ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 9ms (Views: 0.1ms | ActiveRecord: 1.2ms | Allocations: 3348)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"7", "params"=>{"title"=>"sfdasdff"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"7", "params"=>{"title"=>"sfdasdff"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 7], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.3ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "sfdasdff"], ["updated_at", "2023-02-24 08:14:12.013836"], ["id", 7]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.5ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 8ms (Views: 0.3ms | ActiveRecord: 0.9ms | Allocations: 3434)


Started POST "/graphql" for ::1 at 2023-02-24 17:14:12 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"7", "params"=>{"title"=>"sfdasdfs"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"7", "params"=>{"title"=>"sfdasdfs"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 7], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.2ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "sfdasdfs"], ["updated_at", "2023-02-24 08:14:12.026469"], ["id", 7]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 4ms (Views: 0.1ms | ActiveRecord: 0.6ms | Allocations: 3284)


Started POST "/graphql" for ::1 at 2023-02-24 17:14:12 +0900
Started POST "/graphql" for ::1 at 2023-02-24 17:14:12 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"7", "params"=>{"title"=>"sfdasdfss"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"7", "params"=>{"title"=>"sfdasdfss"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 7], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.3ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "sfdasdfss"], ["updated_at", "2023-02-24 08:14:12.168110"], ["id", 7]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.6ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 7ms (Views: 0.1ms | ActiveRecord: 1.0ms | Allocations: 3324)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"7", "params"=>{"title"=>"sfdasdfsa"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"7", "params"=>{"title"=>"sfdasdfsa"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 7], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.2ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "sfdasdfsa"], ["updated_at", "2023-02-24 08:14:12.174914"], ["id", 7]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.5ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 5ms (Views: 0.1ms | ActiveRecord: 0.8ms | Allocations: 3285)


Started POST "/graphql" for ::1 at 2023-02-24 17:14:12 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"7", "params"=>{"title"=>"sfdasdfsad"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"7", "params"=>{"title"=>"sfdasdfsad"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 7], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.3ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "sfdasdfsad"], ["updated_at", "2023-02-24 08:14:12.258944"], ["id", 7]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.6ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 8ms (Views: 0.1ms | ActiveRecord: 1.1ms | Allocations: 3419)


Started POST "/graphql" for ::1 at 2023-02-24 17:14:12 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"7", "params"=>{"title"=>"sfdasdfsaf"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"7", "params"=>{"title"=>"sfdasdfsaf"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 7], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.2ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "sfdasdfsaf"], ["updated_at", "2023-02-24 08:14:12.271168"], ["id", 7]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 6ms (Views: 0.1ms | ActiveRecord: 0.8ms | Allocations: 3284)


Started POST "/graphql" for ::1 at 2023-02-24 17:17:56 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"6"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"6"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 6], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (1.9ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 6]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 13ms (Views: 0.3ms | ActiveRecord: 2.2ms | Allocations: 1705)


Started POST "/graphql" for ::1 at 2023-02-24 17:17:56 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 6ms (Views: 0.2ms | ActiveRecord: 0.2ms | Allocations: 1863)


Started POST "/graphql" for ::1 at 2023-02-24 17:19:31 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 9ms (Views: 0.4ms | ActiveRecord: 0.2ms | Allocations: 1863)


Started POST "/graphql" for ::1 at 2023-02-24 17:20:10 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.3ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 23ms (Views: 0.6ms | ActiveRecord: 0.3ms | Allocations: 1863)


Started POST "/graphql" for ::1 at 2023-02-24 17:20:14 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 1863)


Started POST "/graphql" for ::1 at 2023-02-24 17:20:36 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 9ms (Views: 0.8ms | ActiveRecord: 0.2ms | Allocations: 1863)


Started POST "/graphql" for ::1 at 2023-02-24 17:23:54 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 13ms (Views: 0.5ms | ActiveRecord: 0.2ms | Allocations: 1863)


Started POST "/graphql" for ::1 at 2023-02-24 17:27:14 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 8ms (Views: 0.3ms | ActiveRecord: 0.2ms | Allocations: 1863)


Started POST "/graphql" for ::1 at 2023-02-24 17:27:30 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.3ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 19ms (Views: 0.4ms | ActiveRecord: 0.3ms | Allocations: 1863)


Started POST "/graphql" for ::1 at 2023-02-24 17:28:09 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.4ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 24ms (Views: 1.0ms | ActiveRecord: 0.4ms | Allocations: 1864)


Started POST "/graphql" for ::1 at 2023-02-24 17:28:15 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.5ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 18ms (Views: 1.4ms | ActiveRecord: 0.5ms | Allocations: 1863)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:38 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.9ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (1.5ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", ""], ["created_at", "2023-02-24 08:31:38.281451"], ["updated_at", "2023-02-24 08:31:38.281451"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (1.5ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 36ms (Views: 0.3ms | ActiveRecord: 3.8ms | Allocations: 2728)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:38 +0900
Started POST "/graphql" for ::1 at 2023-02-24 17:31:38 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 1983)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 1981)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:40 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 44ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 1982)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:41 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.9ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (0.6ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", ""], ["created_at", "2023-02-24 08:31:41.122822"], ["updated_at", "2023-02-24 08:31:41.122822"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (1.5ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 11ms (Views: 0.3ms | ActiveRecord: 3.1ms | Allocations: 2729)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:41 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 2100)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:41 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (0.3ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", ""], ["created_at", "2023-02-24 08:31:41.588716"], ["updated_at", "2023-02-24 08:31:41.588716"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (0.7ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 7ms (Views: 0.1ms | ActiveRecord: 1.0ms | Allocations: 2728)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:41 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 3ms (Views: 0.4ms | ActiveRecord: 0.1ms | Allocations: 2216)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:42 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"1"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"1"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (1.6ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 9ms (Views: 0.3ms | ActiveRecord: 1.9ms | Allocations: 1704)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:42 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.2ms | Allocations: 2100)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:42 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"3"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"3"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.3ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 3], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (1.7ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 3]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 9ms (Views: 0.2ms | ActiveRecord: 2.0ms | Allocations: 1704)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:42 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.1ms | Allocations: 1981)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:43 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"4"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"4"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 4], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (1.4ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 4]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 1.6ms | Allocations: 1703)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:43 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 1863)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:44 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (0.3ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", ""], ["created_at", "2023-02-24 08:31:44.478939"], ["updated_at", "2023-02-24 08:31:44.478939"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (0.5ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 4ms (Views: 0.1ms | ActiveRecord: 0.8ms | Allocations: 2728)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:44 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 2ms (Views: 0.4ms | ActiveRecord: 0.1ms | Allocations: 1981)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:45 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (0.2ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", ""], ["created_at", "2023-02-24 08:31:45.527973"], ["updated_at", "2023-02-24 08:31:45.527973"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (0.6ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 4ms (Views: 0.1ms | ActiveRecord: 0.9ms | Allocations: 2728)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:45 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 2099)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:51 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (0.5ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", ""], ["created_at", "2023-02-24 08:31:51.415490"], ["updated_at", "2023-02-24 08:31:51.415490"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (1.2ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 17ms (Views: 0.3ms | ActiveRecord: 1.9ms | Allocations: 2729)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:51 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.3ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.3ms | Allocations: 2216)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:52 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (0.7ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", ""], ["created_at", "2023-02-24 08:31:52.075496"], ["updated_at", "2023-02-24 08:31:52.075496"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (1.1ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 12ms (Views: 0.2ms | ActiveRecord: 1.9ms | Allocations: 2728)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:52 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 5ms (Views: 0.6ms | ActiveRecord: 0.1ms | Allocations: 2335)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:53 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"fawer"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"fawer"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (0.5ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "fawer"], ["created_at", "2023-02-24 08:31:53.921498"], ["updated_at", "2023-02-24 08:31:53.921498"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (0.9ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 16ms (Views: 0.1ms | ActiveRecord: 1.6ms | Allocations: 2729)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:53 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 11ms (Views: 6.7ms | ActiveRecord: 0.2ms | Allocations: 2454)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:56 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"10"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"10"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 10], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (1.6ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 10]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 8ms (Views: 0.3ms | ActiveRecord: 1.8ms | Allocations: 1704)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:56 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.1ms | Allocations: 2336)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:56 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"9"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"9"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 9], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (1.5ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 9]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 1.7ms | Allocations: 1703)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:56 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.1ms | Allocations: 2216)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:57 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"8"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"8"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 8], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (2.0ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 8]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 9ms (Views: 0.4ms | ActiveRecord: 2.2ms | Allocations: 1705)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:57 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.2ms | Allocations: 2099)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:58 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"11"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"11"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 11], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (1.6ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 11]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 9ms (Views: 0.3ms | ActiveRecord: 1.8ms | Allocations: 1704)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:58 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 1981)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:59 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"12"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"12"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 12], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (1.9ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 12]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 8ms (Views: 0.2ms | ActiveRecord: 2.1ms | Allocations: 1703)


Started POST "/graphql" for ::1 at 2023-02-24 17:31:59 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 1863)


Started POST "/graphql" for ::1 at 2023-02-24 17:32:00 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"13"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"13"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.3ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 13], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (1.5ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 13]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 8ms (Views: 0.2ms | ActiveRecord: 1.8ms | Allocations: 1703)


Started POST "/graphql" for ::1 at 2023-02-24 17:32:00 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 1745)


Started POST "/graphql" for ::1 at 2023-02-24 17:32:00 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"14"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"14"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 14], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (1.7ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 14]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 8ms (Views: 0.3ms | ActiveRecord: 1.9ms | Allocations: 1703)


Started POST "/graphql" for ::1 at 2023-02-24 17:32:00 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 1627)


Started POST "/graphql" for ::1 at 2023-02-24 17:37:12 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (0.5ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", ""], ["created_at", "2023-02-24 08:37:12.294270"], ["updated_at", "2023-02-24 08:37:12.294270"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (1.9ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 18ms (Views: 1.1ms | ActiveRecord: 2.6ms | Allocations: 2728)


Started POST "/graphql" for ::1 at 2023-02-24 17:37:12 +0900
Started POST "/graphql" for ::1 at 2023-02-24 17:37:12 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 1754)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 3ms (Views: 0.1ms | ActiveRecord: 0.1ms | Allocations: 1745)


Started POST "/graphql" for ::1 at 2023-02-24 17:37:13 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (0.3ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", ""], ["created_at", "2023-02-24 08:37:13.458702"], ["updated_at", "2023-02-24 08:37:13.458702"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 8ms (Views: 0.1ms | ActiveRecord: 0.8ms | Allocations: 2728)


Started POST "/graphql" for ::1 at 2023-02-24 17:37:13 +0900
Started POST "/graphql" for ::1 at 2023-02-24 17:37:13 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 8ms (Views: 4.7ms | ActiveRecord: 0.1ms | Allocations: 1870)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.2ms | Allocations: 1909)


Started POST "/graphql" for ::1 at 2023-02-24 17:37:16 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"5", "params"=>{"title"=>"dsadasdsdasd"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"5", "params"=>{"title"=>"dsadasdsdasd"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 5], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.5ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "dsadasdsdasd"], ["updated_at", "2023-02-24 08:37:16.136541"], ["id", 5]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.9ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 11ms (Views: 0.3ms | ActiveRecord: 1.6ms | Allocations: 3285)


Started POST "/graphql" for ::1 at 2023-02-24 17:37:16 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"5", "params"=>{"title"=>"dsadasdsdas"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"5", "params"=>{"title"=>"dsadasdsdas"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 5], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.3ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "dsadasdsdas"], ["updated_at", "2023-02-24 08:37:16.256899"], ["id", 5]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.6ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 6ms (Views: 0.1ms | ActiveRecord: 1.0ms | Allocations: 3285)


Started POST "/graphql" for ::1 at 2023-02-24 17:37:16 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"5", "params"=>{"title"=>"dsadasdsda"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"5", "params"=>{"title"=>"dsadasdsda"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 5], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.5ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "dsadasdsda"], ["updated_at", "2023-02-24 08:37:16.401427"], ["id", 5]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (1.1ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 1.9ms | Allocations: 3284)


Started POST "/graphql" for ::1 at 2023-02-24 17:37:16 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"5", "params"=>{"title"=>"dsadasdsd"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"5", "params"=>{"title"=>"dsadasdsd"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 5], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.5ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "dsadasdsd"], ["updated_at", "2023-02-24 08:37:16.521247"], ["id", 5]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.8ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 1.5ms | Allocations: 3284)


Started POST "/graphql" for ::1 at 2023-02-24 17:37:16 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"5", "params"=>{"title"=>"dsadasds"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"5", "params"=>{"title"=>"dsadasds"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 5], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.5ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "dsadasds"], ["updated_at", "2023-02-24 08:37:16.644569"], ["id", 5]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.8ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 10ms (Views: 0.5ms | ActiveRecord: 1.6ms | Allocations: 3285)


Started POST "/graphql" for ::1 at 2023-02-24 17:37:16 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"updateTodo", "variables"=>{"id"=>"5", "params"=>{"title"=>"dsadasd"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"updateTodo", "variables"=>{"id"=>"5", "params"=>{"title"=>"dsadasd"}}, "query"=>"mutation updateTodo($id: ID!, $params: TodoAttributes!) {\n  updateTodo(input: {id: $id, params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 5], ["LIMIT", 1]]
  ↳ app/graphql/mutations/update_todo.rb:9:in `resolve'
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTodo Update (0.5ms)[0m  [1m[33mUPDATE "todos" SET "title" = ?, "updated_at" = ? WHERE "todos"."id" = ?[0m  [["title", "dsadasd"], ["updated_at", "2023-02-24 08:37:16.769655"], ["id", 5]]
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
  [1m[36mTRANSACTION (0.8ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/update_todo.rb:10:in `resolve'
Completed 200 OK in 11ms (Views: 0.3ms | ActiveRecord: 1.6ms | Allocations: 3284)


Started POST "/graphql" for ::1 at 2023-02-24 17:37:19 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 1863)


Started POST "/graphql" for ::1 at 2023-02-24 17:37:19 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"5"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"5"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 5], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (2.2ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 5]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 8ms (Views: 0.3ms | ActiveRecord: 2.4ms | Allocations: 1704)


Started POST "/graphql" for ::1 at 2023-02-24 17:37:19 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.2ms | Allocations: 1745)


Started POST "/graphql" for ::1 at 2023-02-24 17:37:24 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"fdsafas"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"fdsafas"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (1.0ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "fdsafas"], ["created_at", "2023-02-24 08:37:24.400704"], ["updated_at", "2023-02-24 08:37:24.400704"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (1.4ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 2.4ms | Allocations: 2728)


Started POST "/graphql" for ::1 at 2023-02-24 17:37:24 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.1ms | Allocations: 1863)


Started POST "/graphql" for ::1 at 2023-02-24 17:40:23 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (0.5ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", ""], ["created_at", "2023-02-24 08:40:23.186687"], ["updated_at", "2023-02-24 08:40:23.186687"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (1.4ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 13ms (Views: 0.4ms | ActiveRecord: 2.0ms | Allocations: 2729)


Started POST "/graphql" for ::1 at 2023-02-24 17:40:23 +0900
Started POST "/graphql" for ::1 at 2023-02-24 17:40:23 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 1991)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 1982)


Started POST "/graphql" for ::1 at 2023-02-24 17:41:14 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"3423424234242342"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"3423424234242342"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (0.3ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "3423424234242342"], ["created_at", "2023-02-24 08:41:14.922186"], ["updated_at", "2023-02-24 08:41:14.922186"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (2.3ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 6ms (Views: 0.1ms | ActiveRecord: 2.7ms | Allocations: 2728)


Started POST "/graphql" for ::1 at 2023-02-24 17:41:14 +0900
Started POST "/graphql" for ::1 at 2023-02-24 17:41:14 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 3ms (Views: 0.4ms | ActiveRecord: 0.1ms | Allocations: 2101)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 6ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 2100)


Started POST "/graphql" for ::1 at 2023-02-24 17:41:17 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"7"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"7"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.3ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 7], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (1.4ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 7]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 1.6ms | Allocations: 1704)


Started POST "/graphql" for ::1 at 2023-02-24 17:41:18 +0900
Started POST "/graphql" for ::1 at 2023-02-24 17:41:18 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 4ms (Views: 0.6ms | ActiveRecord: 0.1ms | Allocations: 1984)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 1982)


Started POST "/graphql" for ::1 at 2023-02-24 17:41:18 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"15"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"15"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 15], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (1.4ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 15]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 6ms (Views: 0.2ms | ActiveRecord: 1.6ms | Allocations: 1703)


Started POST "/graphql" for ::1 at 2023-02-24 17:41:18 +0900
Started POST "/graphql" for ::1 at 2023-02-24 17:41:18 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.1ms | Allocations: 1865)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 1863)


Started POST "/graphql" for ::1 at 2023-02-24 17:42:11 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 24ms (Views: 0.4ms | ActiveRecord: 0.2ms | Allocations: 1864)


Started GET "/" for ::1 at 2023-02-24 17:47:28 +0900
Processing by Rails::WelcomeController#index as HTML
  Rendering vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/templates/rails/welcome/index.html.erb
  Rendered vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/templates/rails/welcome/index.html.erb (Duration: 1.9ms | Allocations: 291)
Completed 200 OK in 5ms (Views: 3.3ms | ActiveRecord: 0.0ms | Allocations: 1027)


Started POST "/graphql" for ::1 at 2023-02-24 17:50:35 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.7ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 29ms (Views: 0.6ms | ActiveRecord: 4.9ms | Allocations: 2338)


Started POST "/graphql" for ::1 at 2023-02-24 17:50:51 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  todos {\n    id\n    title\n    updatedAt\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"{\n  todos {\n    id\n    title\n    updatedAt\n  }\n}", "variables"=>nil}}
  [1m[36mTodo Load (0.3ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 14ms (Views: 0.5ms | ActiveRecord: 0.3ms | Allocations: 1697)


Started GET "/assets/graphiql/rails/application-d78230954080343c556e7465ad58ff8802dc2c2455d2e14983801a14c3dd0036.js" for ::1 at 2023-02-24 17:50:53 +0900
Started POST "/graphql" for ::1 at 2023-02-24 18:55:26 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.4ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 21ms (Views: 0.6ms | ActiveRecord: 2.3ms | Allocations: 9546)


Started POST "/graphql" for 127.0.0.1 at 2023-02-26 15:18:40 +0900
Processing by GraphqlController#execute as JSON
  Parameters: {"query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}", "graphql"=>{"query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"}}
uninitialized constant Mutations::GetNumTodo

          mutation: ::Mutations::GetNumTodo,
                               ^^^^^^^^^^^^
Did you mean?  Mutations::GetnumTodo
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/types/mutation_type.rb:10:in `<class:MutationType>'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/types/mutation_type.rb:2:in `<module:Types>'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/types/mutation_type.rb:1:in `<main>'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/bootsnap-1.16.0/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:32:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/zeitwerk-2.6.7/lib/zeitwerk/kernel.rb:30:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/rails_react_graphql_schema.rb:2:in `<class:RailsReactGraphqlSchema>'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/rails_react_graphql_schema.rb:1:in `<main>'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/bootsnap-1.16.0/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:32:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/zeitwerk-2.6.7/lib/zeitwerk/kernel.rb:30:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/controllers/graphql_controller.rb:15:in `execute'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/basic_implicit_render.rb:6:in `send_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/base.rb:215:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/rendering.rb:53:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/callbacks.rb:234:in `block in process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/callbacks.rb:99:in `run_callbacks'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/callbacks.rb:233:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/rescue.rb:22:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/instrumentation.rb:67:in `block in process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications.rb:206:in `block in instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications/instrumenter.rb:24:in `instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications.rb:206:in `instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/instrumentation.rb:66:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/params_wrapper.rb:259:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/railties/controller_runtime.rb:27:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/base.rb:151:in `process'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal.rb:188:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal.rb:251:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:49:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:32:in `serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:50:in `block in serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:32:in `each'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:32:in `serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:852:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/session/abstract/id.rb:266:in `context'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/session/abstract/id.rb:260:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/etag.rb:27:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/conditional_get.rb:40:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/head.rb:12:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/migration.rb:603:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/callbacks.rb:27:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/callbacks.rb:99:in `run_callbacks'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/callbacks.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/actionable_exceptions.rb:17:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/debug_exceptions.rb:28:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/show_exceptions.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:40:in `call_app'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:25:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:99:in `block in tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:37:in `tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:99:in `tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:25:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/remote_ip.rb:93:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/request_id.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/runtime.rb:22:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:61:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:26:in `collect_events'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:60:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/static.rb:23:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/sendfile.rb:110:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/host_authorization.rb:137:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-cors-2.0.0/lib/rack/cors.rb:102:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/engine.rb:530:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/configuration.rb:252:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/request.rb:77:in `block in handle_request'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/thread_pool.rb:340:in `with_force_shutdown'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/request.rb:76:in `handle_request'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/server.rb:443:in `process_client'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/thread_pool.rb:147:in `block in spawn_thread'
Completed 500 Internal Server Error in 20ms (Views: 1.2ms | Allocations: 6259)


Started POST "/graphql" for 127.0.0.1 at 2023-02-26 15:19:38 +0900
Processing by GraphqlController#execute as JSON
  Parameters: {"query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}", "graphql"=>{"query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"}}
uninitialized constant Mutations::GetNumTodo
Did you mean?  Mutations::GetnumTodo
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/types/mutation_type.rb:9:in `<class:MutationType>'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/types/mutation_type.rb:2:in `<module:Types>'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/types/mutation_type.rb:1:in `<main>'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/bootsnap-1.16.0/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:32:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/zeitwerk-2.6.7/lib/zeitwerk/kernel.rb:30:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/rails_react_graphql_schema.rb:2:in `<class:RailsReactGraphqlSchema>'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/rails_react_graphql_schema.rb:1:in `<main>'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/bootsnap-1.16.0/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:32:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/zeitwerk-2.6.7/lib/zeitwerk/kernel.rb:30:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/controllers/graphql_controller.rb:15:in `execute'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/basic_implicit_render.rb:6:in `send_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/base.rb:215:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/rendering.rb:53:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/callbacks.rb:234:in `block in process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/callbacks.rb:99:in `run_callbacks'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/callbacks.rb:233:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/rescue.rb:22:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/instrumentation.rb:67:in `block in process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications.rb:206:in `block in instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications/instrumenter.rb:24:in `instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications.rb:206:in `instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/instrumentation.rb:66:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/params_wrapper.rb:259:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/railties/controller_runtime.rb:27:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/base.rb:151:in `process'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal.rb:188:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal.rb:251:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:49:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:32:in `serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:50:in `block in serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:32:in `each'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:32:in `serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:852:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/session/abstract/id.rb:266:in `context'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/session/abstract/id.rb:260:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/etag.rb:27:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/conditional_get.rb:40:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/head.rb:12:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/migration.rb:603:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/callbacks.rb:27:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/callbacks.rb:99:in `run_callbacks'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/callbacks.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/actionable_exceptions.rb:17:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/debug_exceptions.rb:28:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/show_exceptions.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:40:in `call_app'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:25:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:99:in `block in tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:37:in `tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:99:in `tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:25:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/remote_ip.rb:93:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/request_id.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/runtime.rb:22:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:61:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:26:in `collect_events'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:60:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/static.rb:23:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/sendfile.rb:110:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/host_authorization.rb:137:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-cors-2.0.0/lib/rack/cors.rb:102:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/engine.rb:530:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/configuration.rb:252:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/request.rb:77:in `block in handle_request'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/thread_pool.rb:340:in `with_force_shutdown'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/request.rb:76:in `handle_request'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/server.rb:443:in `process_client'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/thread_pool.rb:147:in `block in spawn_thread'
Completed 500 Internal Server Error in 13ms (Views: 0.6ms | Allocations: 6085)


Started POST "/graphql" for 127.0.0.1 at 2023-02-26 15:19:54 +0900
Processing by GraphqlController#execute as JSON
  Parameters: {"query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}", "graphql"=>{"query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"}}
uninitialized constant Mutations::GetNumTodo
Did you mean?  Mutations::GetnumTodo
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/types/mutation_type.rb:9:in `<class:MutationType>'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/types/mutation_type.rb:2:in `<module:Types>'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/types/mutation_type.rb:1:in `<main>'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/bootsnap-1.16.0/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:32:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/zeitwerk-2.6.7/lib/zeitwerk/kernel.rb:30:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/rails_react_graphql_schema.rb:2:in `<class:RailsReactGraphqlSchema>'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/rails_react_graphql_schema.rb:1:in `<main>'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/bootsnap-1.16.0/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:32:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/zeitwerk-2.6.7/lib/zeitwerk/kernel.rb:30:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/controllers/graphql_controller.rb:15:in `execute'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/basic_implicit_render.rb:6:in `send_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/base.rb:215:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/rendering.rb:53:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/callbacks.rb:234:in `block in process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/callbacks.rb:99:in `run_callbacks'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/callbacks.rb:233:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/rescue.rb:22:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/instrumentation.rb:67:in `block in process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications.rb:206:in `block in instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications/instrumenter.rb:24:in `instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications.rb:206:in `instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/instrumentation.rb:66:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/params_wrapper.rb:259:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/railties/controller_runtime.rb:27:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/base.rb:151:in `process'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal.rb:188:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal.rb:251:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:49:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:32:in `serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:50:in `block in serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:32:in `each'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:32:in `serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:852:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/session/abstract/id.rb:266:in `context'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/session/abstract/id.rb:260:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/etag.rb:27:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/conditional_get.rb:40:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/head.rb:12:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/migration.rb:603:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/callbacks.rb:27:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/callbacks.rb:99:in `run_callbacks'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/callbacks.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/actionable_exceptions.rb:17:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/debug_exceptions.rb:28:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/show_exceptions.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:40:in `call_app'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:25:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:99:in `block in tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:37:in `tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:99:in `tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:25:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/remote_ip.rb:93:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/request_id.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/runtime.rb:22:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:61:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:26:in `collect_events'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:60:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/static.rb:23:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/sendfile.rb:110:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/host_authorization.rb:137:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-cors-2.0.0/lib/rack/cors.rb:102:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/engine.rb:530:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/configuration.rb:252:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/request.rb:77:in `block in handle_request'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/thread_pool.rb:340:in `with_force_shutdown'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/request.rb:76:in `handle_request'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/server.rb:443:in `process_client'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/thread_pool.rb:147:in `block in spawn_thread'
Completed 500 Internal Server Error in 13ms (Views: 1.2ms | Allocations: 6031)


Started POST "/graphql" for 127.0.0.1 at 2023-02-26 15:22:52 +0900
Processing by GraphqlController#execute as JSON
  Parameters: {"query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}", "graphql"=>{"query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"}}
uninitialized constant Mutations::GetNumTodo
Did you mean?  Mutations::GetnumTodo
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/types/mutation_type.rb:6:in `<class:MutationType>'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/types/mutation_type.rb:2:in `<module:Types>'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/types/mutation_type.rb:1:in `<main>'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/bootsnap-1.16.0/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:32:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/zeitwerk-2.6.7/lib/zeitwerk/kernel.rb:30:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/rails_react_graphql_schema.rb:2:in `<class:RailsReactGraphqlSchema>'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/rails_react_graphql_schema.rb:1:in `<main>'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/bootsnap-1.16.0/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:32:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/zeitwerk-2.6.7/lib/zeitwerk/kernel.rb:30:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/controllers/graphql_controller.rb:15:in `execute'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/basic_implicit_render.rb:6:in `send_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/base.rb:215:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/rendering.rb:53:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/callbacks.rb:234:in `block in process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/callbacks.rb:99:in `run_callbacks'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/callbacks.rb:233:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/rescue.rb:22:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/instrumentation.rb:67:in `block in process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications.rb:206:in `block in instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications/instrumenter.rb:24:in `instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications.rb:206:in `instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/instrumentation.rb:66:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/params_wrapper.rb:259:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/railties/controller_runtime.rb:27:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/base.rb:151:in `process'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal.rb:188:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal.rb:251:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:49:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:32:in `serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:50:in `block in serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:32:in `each'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:32:in `serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:852:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/session/abstract/id.rb:266:in `context'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/session/abstract/id.rb:260:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/etag.rb:27:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/conditional_get.rb:40:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/head.rb:12:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/migration.rb:603:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/callbacks.rb:27:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/callbacks.rb:99:in `run_callbacks'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/callbacks.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/actionable_exceptions.rb:17:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/debug_exceptions.rb:28:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/show_exceptions.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:40:in `call_app'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:25:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:99:in `block in tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:37:in `tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:99:in `tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:25:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/remote_ip.rb:93:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/request_id.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/runtime.rb:22:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:61:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:26:in `collect_events'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:60:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/static.rb:23:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/sendfile.rb:110:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/host_authorization.rb:137:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-cors-2.0.0/lib/rack/cors.rb:102:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/engine.rb:530:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/configuration.rb:252:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/request.rb:77:in `block in handle_request'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/thread_pool.rb:340:in `with_force_shutdown'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/request.rb:76:in `handle_request'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/server.rb:443:in `process_client'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/thread_pool.rb:147:in `block in spawn_thread'
Completed 500 Internal Server Error in 12ms (Views: 1.0ms | Allocations: 6074)


Started POST "/graphql" for 127.0.0.1 at 2023-02-26 15:28:26 +0900
Processing by GraphqlController#execute as JSON
  Parameters: {"query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}", "graphql"=>{"query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"}}
uninitialized constant Mutations::GetNumTodo
Did you mean?  Mutations::GetnumTodo
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/types/mutation_type.rb:6:in `<class:MutationType>'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/types/mutation_type.rb:2:in `<module:Types>'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/types/mutation_type.rb:1:in `<main>'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/bootsnap-1.16.0/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:32:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/zeitwerk-2.6.7/lib/zeitwerk/kernel.rb:30:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/rails_react_graphql_schema.rb:2:in `<class:RailsReactGraphqlSchema>'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/rails_react_graphql_schema.rb:1:in `<main>'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/bootsnap-1.16.0/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:32:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/zeitwerk-2.6.7/lib/zeitwerk/kernel.rb:30:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/controllers/graphql_controller.rb:15:in `execute'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/basic_implicit_render.rb:6:in `send_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/base.rb:215:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/rendering.rb:53:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/callbacks.rb:234:in `block in process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/callbacks.rb:99:in `run_callbacks'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/callbacks.rb:233:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/rescue.rb:22:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/instrumentation.rb:67:in `block in process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications.rb:206:in `block in instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications/instrumenter.rb:24:in `instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications.rb:206:in `instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/instrumentation.rb:66:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/params_wrapper.rb:259:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/railties/controller_runtime.rb:27:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/base.rb:151:in `process'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal.rb:188:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal.rb:251:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:49:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:32:in `serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:50:in `block in serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:32:in `each'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:32:in `serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:852:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/session/abstract/id.rb:266:in `context'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/session/abstract/id.rb:260:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/etag.rb:27:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/conditional_get.rb:40:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/head.rb:12:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/migration.rb:603:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/callbacks.rb:27:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/callbacks.rb:99:in `run_callbacks'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/callbacks.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/actionable_exceptions.rb:17:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/debug_exceptions.rb:28:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/show_exceptions.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:40:in `call_app'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:25:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:99:in `block in tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:37:in `tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:99:in `tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:25:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/remote_ip.rb:93:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/request_id.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/runtime.rb:22:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:61:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:26:in `collect_events'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:60:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/static.rb:23:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/sendfile.rb:110:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/host_authorization.rb:137:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-cors-2.0.0/lib/rack/cors.rb:102:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/engine.rb:530:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/configuration.rb:252:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/request.rb:77:in `block in handle_request'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/thread_pool.rb:340:in `with_force_shutdown'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/request.rb:76:in `handle_request'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/server.rb:443:in `process_client'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/thread_pool.rb:147:in `block in spawn_thread'
Completed 500 Internal Server Error in 16ms (Views: 0.8ms | Allocations: 4577)


Started POST "/graphql" for 127.0.0.1 at 2023-02-26 15:34:19 +0900
Processing by GraphqlController#execute as JSON
  Parameters: {"query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}", "graphql"=>{"query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"}}
uninitialized constant Mutations::GetNumTodo
Did you mean?  Mutations::GetnumTodo
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/types/mutation_type.rb:6:in `<class:MutationType>'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/types/mutation_type.rb:2:in `<module:Types>'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/types/mutation_type.rb:1:in `<main>'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/bootsnap-1.16.0/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:32:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/zeitwerk-2.6.7/lib/zeitwerk/kernel.rb:30:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/rails_react_graphql_schema.rb:2:in `<class:RailsReactGraphqlSchema>'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/rails_react_graphql_schema.rb:1:in `<main>'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/bootsnap-1.16.0/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:32:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/zeitwerk-2.6.7/lib/zeitwerk/kernel.rb:30:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/controllers/graphql_controller.rb:15:in `execute'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/basic_implicit_render.rb:6:in `send_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/base.rb:215:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/rendering.rb:53:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/callbacks.rb:234:in `block in process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/callbacks.rb:99:in `run_callbacks'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/callbacks.rb:233:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/rescue.rb:22:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/instrumentation.rb:67:in `block in process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications.rb:206:in `block in instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications/instrumenter.rb:24:in `instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications.rb:206:in `instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/instrumentation.rb:66:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/params_wrapper.rb:259:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/railties/controller_runtime.rb:27:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/base.rb:151:in `process'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal.rb:188:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal.rb:251:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:49:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:32:in `serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:50:in `block in serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:32:in `each'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:32:in `serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:852:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/session/abstract/id.rb:266:in `context'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/session/abstract/id.rb:260:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/etag.rb:27:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/conditional_get.rb:40:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/head.rb:12:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/migration.rb:603:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/callbacks.rb:27:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/callbacks.rb:99:in `run_callbacks'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/callbacks.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/actionable_exceptions.rb:17:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/debug_exceptions.rb:28:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/show_exceptions.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:40:in `call_app'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:25:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:99:in `block in tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:37:in `tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:99:in `tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:25:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/remote_ip.rb:93:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/request_id.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/runtime.rb:22:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:61:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:26:in `collect_events'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:60:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/static.rb:23:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/sendfile.rb:110:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/host_authorization.rb:137:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-cors-2.0.0/lib/rack/cors.rb:102:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/engine.rb:530:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/configuration.rb:252:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/request.rb:77:in `block in handle_request'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/thread_pool.rb:340:in `with_force_shutdown'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/request.rb:76:in `handle_request'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/server.rb:443:in `process_client'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/thread_pool.rb:147:in `block in spawn_thread'
Completed 500 Internal Server Error in 15ms (Views: 0.6ms | Allocations: 4520)


  [1m[36mActiveRecord::SchemaMigration Pluck (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[36mActiveRecord::SchemaMigration Pluck (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::SchemaMigration Pluck (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mTodo Create (1.1ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "めも 1"], ["created_at", "2023-02-26 06:35:51.714702"], ["updated_at", "2023-02-26 06:35:51.714702"]]
  [1m[36mTRANSACTION (0.5ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mTodo Create (0.2ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "めも 2"], ["created_at", "2023-02-26 06:35:51.717856"], ["updated_at", "2023-02-26 06:35:51.717856"]]
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mTodo Create (0.1ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "めも 3"], ["created_at", "2023-02-26 06:35:51.719338"], ["updated_at", "2023-02-26 06:35:51.719338"]]
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[36mcommit transaction[0m
Started POST "/graphql" for 127.0.0.1 at 2023-02-26 15:36:10 +0900
  [1m[36mActiveRecord::SchemaMigration Pluck (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as JSON
  Parameters: {"query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}", "graphql"=>{"query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"}}
uninitialized constant Mutations::GetNumTodo
Did you mean?  Mutations::GetnumTodo
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/types/mutation_type.rb:6:in `<class:MutationType>'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/types/mutation_type.rb:2:in `<module:Types>'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/types/mutation_type.rb:1:in `<main>'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/bootsnap-1.16.0/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:32:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/zeitwerk-2.6.7/lib/zeitwerk/kernel.rb:30:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/rails_react_graphql_schema.rb:2:in `<class:RailsReactGraphqlSchema>'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/rails_react_graphql_schema.rb:1:in `<main>'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/bootsnap-1.16.0/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:32:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/zeitwerk-2.6.7/lib/zeitwerk/kernel.rb:30:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/controllers/graphql_controller.rb:15:in `execute'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/basic_implicit_render.rb:6:in `send_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/base.rb:215:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/rendering.rb:53:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/callbacks.rb:234:in `block in process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/callbacks.rb:99:in `run_callbacks'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/callbacks.rb:233:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/rescue.rb:22:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/instrumentation.rb:67:in `block in process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications.rb:206:in `block in instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications/instrumenter.rb:24:in `instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications.rb:206:in `instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/instrumentation.rb:66:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/params_wrapper.rb:259:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/railties/controller_runtime.rb:27:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/base.rb:151:in `process'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal.rb:188:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal.rb:251:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:49:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:32:in `serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:50:in `block in serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:32:in `each'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:32:in `serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:852:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/session/abstract/id.rb:266:in `context'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/session/abstract/id.rb:260:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/etag.rb:27:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/conditional_get.rb:40:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/head.rb:12:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/migration.rb:603:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/callbacks.rb:27:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/callbacks.rb:99:in `run_callbacks'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/callbacks.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/actionable_exceptions.rb:17:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/debug_exceptions.rb:28:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/show_exceptions.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:40:in `call_app'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:25:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:99:in `block in tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:37:in `tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:99:in `tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:25:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/remote_ip.rb:93:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/request_id.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/runtime.rb:22:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:61:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:26:in `collect_events'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:60:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/static.rb:23:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/sendfile.rb:110:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/host_authorization.rb:137:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-cors-2.0.0/lib/rack/cors.rb:102:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/engine.rb:530:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/configuration.rb:252:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/request.rb:77:in `block in handle_request'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/thread_pool.rb:340:in `with_force_shutdown'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/request.rb:76:in `handle_request'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/server.rb:443:in `process_client'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/thread_pool.rb:147:in `block in spawn_thread'
Completed 500 Internal Server Error in 16ms (Views: 0.6ms | ActiveRecord: 0.0ms | Allocations: 9360)


Started POST "/graphql" for 127.0.0.1 at 2023-02-26 15:38:47 +0900
Processing by GraphqlController#execute as JSON
  Parameters: {"query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}", "graphql"=>{"query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"}}
Completed 200 OK in 28ms (Views: 2.3ms | Allocations: 32986)


Started POST "/graphql" for 127.0.0.1 at 2023-02-26 15:39:03 +0900
Processing by GraphqlController#execute as JSON
  Parameters: {"query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}", "graphql"=>{"query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"}}
Completed 200 OK in 49ms (Views: 3.1ms | Allocations: 25256)


Started POST "/graphql" for 127.0.0.1 at 2023-02-26 15:39:12 +0900
Processing by GraphqlController#execute as JSON
  Parameters: {"query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}", "graphql"=>{"query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"}}
uninitialized constant Mutations::GetNumTodo
Did you mean?  Mutations::GetnumTodo
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/types/mutation_type.rb:6:in `<class:MutationType>'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/types/mutation_type.rb:2:in `<module:Types>'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/types/mutation_type.rb:1:in `<main>'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/bootsnap-1.16.0/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:32:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/zeitwerk-2.6.7/lib/zeitwerk/kernel.rb:30:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/rails_react_graphql_schema.rb:2:in `<class:RailsReactGraphqlSchema>'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/graphql/rails_react_graphql_schema.rb:1:in `<main>'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
<internal:/Users/firon/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/bootsnap-1.16.0/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:32:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/zeitwerk-2.6.7/lib/zeitwerk/kernel.rb:30:in `require'
/Users/firon/Documents/GitHub/rails-react-graphql-main/app/controllers/graphql_controller.rb:15:in `execute'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/basic_implicit_render.rb:6:in `send_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/base.rb:215:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/rendering.rb:53:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/callbacks.rb:234:in `block in process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/callbacks.rb:99:in `run_callbacks'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/callbacks.rb:233:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/rescue.rb:22:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/instrumentation.rb:67:in `block in process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications.rb:206:in `block in instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications/instrumenter.rb:24:in `instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/notifications.rb:206:in `instrument'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/instrumentation.rb:66:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal/params_wrapper.rb:259:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/railties/controller_runtime.rb:27:in `process_action'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/abstract_controller/base.rb:151:in `process'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal.rb:188:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_controller/metal.rb:251:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:49:in `dispatch'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:32:in `serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:50:in `block in serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:32:in `each'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/journey/router.rb:32:in `serve'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/routing/route_set.rb:852:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/session/abstract/id.rb:266:in `context'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/session/abstract/id.rb:260:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/etag.rb:27:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/conditional_get.rb:40:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/head.rb:12:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.2/lib/active_record/migration.rb:603:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/callbacks.rb:27:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/callbacks.rb:99:in `run_callbacks'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/callbacks.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/actionable_exceptions.rb:17:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/debug_exceptions.rb:28:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/show_exceptions.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:40:in `call_app'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:25:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:99:in `block in tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:37:in `tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/tagged_logging.rb:99:in `tagged'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/rack/logger.rb:25:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/remote_ip.rb:93:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/request_id.rb:26:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/runtime.rb:22:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/activesupport-7.0.4.2/lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:61:in `block in call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:26:in `collect_events'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/server_timing.rb:60:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/static.rb:23:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-2.2.6.2/lib/rack/sendfile.rb:110:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/actionpack-7.0.4.2/lib/action_dispatch/middleware/host_authorization.rb:137:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/rack-cors-2.0.0/lib/rack/cors.rb:102:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/railties-7.0.4.2/lib/rails/engine.rb:530:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/configuration.rb:252:in `call'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/request.rb:77:in `block in handle_request'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/thread_pool.rb:340:in `with_force_shutdown'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/request.rb:76:in `handle_request'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/server.rb:443:in `process_client'
/Users/firon/Documents/GitHub/rails-react-graphql-main/vendor/bundle/ruby/3.1.0/gems/puma-5.6.5/lib/puma/thread_pool.rb:147:in `block in spawn_thread'
Completed 500 Internal Server Error in 9ms (Views: 0.5ms | Allocations: 6063)


  [1m[36mActiveRecord::SchemaMigration Pluck (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[36mActiveRecord::SchemaMigration Pluck (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::SchemaMigration Pluck (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[36mActiveRecord::SchemaMigration Pluck (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::SchemaMigration Pluck (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mTodo Create (0.6ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "めも 1"], ["created_at", "2023-02-26 06:59:32.653207"], ["updated_at", "2023-02-26 06:59:32.653207"]]
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mTodo Create (0.1ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "めも 2"], ["created_at", "2023-02-26 06:59:32.655700"], ["updated_at", "2023-02-26 06:59:32.655700"]]
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mTodo Create (0.1ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "めも 3"], ["created_at", "2023-02-26 06:59:32.657049"], ["updated_at", "2023-02-26 06:59:32.657049"]]
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[36mcommit transaction[0m
Started POST "/graphql" for 127.0.0.1 at 2023-02-26 15:59:58 +0900
  [1m[36mActiveRecord::SchemaMigration Pluck (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as JSON
  Parameters: {"query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}", "graphql"=>{"query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"}}
Completed 200 OK in 28ms (Views: 2.4ms | ActiveRecord: 0.0ms | Allocations: 36934)


Started POST "/graphql" for 127.0.0.1 at 2023-02-26 16:02:09 +0900
Processing by GraphqlController#execute as JSON
  Parameters: {"query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}", "graphql"=>{"query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"}}
Completed 200 OK in 37ms (Views: 7.2ms | ActiveRecord: 0.0ms | Allocations: 25665)


Started POST "/graphql" for 127.0.0.1 at 2023-02-26 16:02:18 +0900
Processing by GraphqlController#execute as JSON
  Parameters: {"query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}", "graphql"=>{"query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"}}
Completed 200 OK in 48ms (Views: 3.3ms | ActiveRecord: 0.0ms | Allocations: 25490)


Started POST "/graphql" for ::1 at 2023-02-26 16:02:56 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}", "graphql"=>{"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}"}}
  [1m[36mTodo Count (0.6ms)[0m  [1m[34mSELECT COUNT(*) FROM "todos"[0m
  ↳ app/graphql/queries/todo_count.rb:7:in `resolve'
Completed 200 OK in 39ms (Views: 0.2ms | ActiveRecord: 0.9ms | Allocations: 4175)


Started POST "/graphql" for ::1 at 2023-02-26 16:03:19 +0900
Started POST "/graphql" for ::1 at 2023-02-26 16:03:19 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}", "graphql"=>{"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}"}}
  [1m[36mTodo Count (0.2ms)[0m  [1m[34mSELECT COUNT(*) FROM "todos"[0m
  ↳ app/graphql/queries/todo_count.rb:7:in `resolve'
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.2ms | Allocations: 1163)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 0.3ms | Allocations: 6098)


Started POST "/graphql" for ::1 at 2023-02-26 16:03:22 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (2.7ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", ""], ["created_at", "2023-02-26 07:03:22.213279"], ["updated_at", "2023-02-26 07:03:22.213279"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (0.9ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 15ms (Views: 0.1ms | ActiveRecord: 3.8ms | Allocations: 3853)


Started POST "/graphql" for ::1 at 2023-02-26 16:03:22 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.1ms | Allocations: 2727)


Started POST "/graphql" for ::1 at 2023-02-26 16:03:24 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"dasda"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"dasda"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (0.7ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "dasda"], ["created_at", "2023-02-26 07:03:24.064346"], ["updated_at", "2023-02-26 07:03:24.064346"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (0.8ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 9ms (Views: 0.2ms | ActiveRecord: 1.6ms | Allocations: 2744)


Started POST "/graphql" for ::1 at 2023-02-26 16:03:24 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.1ms | Allocations: 2807)


Started POST "/graphql" for ::1 at 2023-02-26 16:03:27 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"16"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"16"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 16], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (1.0ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 16]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 24ms (Views: 0.2ms | ActiveRecord: 1.2ms | Allocations: 4444)


Started POST "/graphql" for ::1 at 2023-02-26 16:03:27 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 5ms (Views: 0.6ms | ActiveRecord: 0.1ms | Allocations: 2866)


Started POST "/graphql" for ::1 at 2023-02-26 16:03:27 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"17"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"17"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.6ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 17], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (1.4ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 17]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 8ms (Views: 0.4ms | ActiveRecord: 1.9ms | Allocations: 1791)


Started POST "/graphql" for ::1 at 2023-02-26 16:03:27 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.2ms | Allocations: 2570)


Started POST "/graphql" for ::1 at 2023-02-26 16:03:28 +0900
Started POST "/graphql" for ::1 at 2023-02-26 16:03:28 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 3ms (Views: 0.3ms | ActiveRecord: 0.1ms | Allocations: 2582)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}", "graphql"=>{"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}"}}
  [1m[36mTodo Count (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "todos"[0m
  ↳ app/graphql/queries/todo_count.rb:7:in `resolve'
Completed 200 OK in 3ms (Views: 0.1ms | ActiveRecord: 0.1ms | Allocations: 994)


Started POST "/graphql" for ::1 at 2023-02-26 16:03:30 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (0.3ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", ""], ["created_at", "2023-02-26 07:03:30.643751"], ["updated_at", "2023-02-26 07:03:30.643751"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (1.9ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 7ms (Views: 0.3ms | ActiveRecord: 2.2ms | Allocations: 2776)


Started POST "/graphql" for ::1 at 2023-02-26 16:03:30 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 3ms (Views: 0.4ms | ActiveRecord: 0.1ms | Allocations: 2688)


Started POST "/graphql" for ::1 at 2023-02-26 16:03:30 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (0.3ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", ""], ["created_at", "2023-02-26 07:03:30.853179"], ["updated_at", "2023-02-26 07:03:30.853179"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (0.7ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 11ms (Views: 0.1ms | ActiveRecord: 1.0ms | Allocations: 2728)


Started POST "/graphql" for ::1 at 2023-02-26 16:03:30 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 8ms (Views: 1.7ms | ActiveRecord: 0.1ms | Allocations: 2807)


Started POST "/graphql" for ::1 at 2023-02-26 16:03:31 +0900
Started POST "/graphql" for ::1 at 2023-02-26 16:03:31 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 21ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 2818)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}", "graphql"=>{"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}"}}
  [1m[36mTodo Count (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "todos"[0m
  ↳ app/graphql/queries/todo_count.rb:7:in `resolve'
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.1ms | Allocations: 980)


Started POST "/graphql" for ::1 at 2023-02-26 16:03:40 +0900
Started POST "/graphql" for ::1 at 2023-02-26 16:03:40 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}", "graphql"=>{"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}"}}
  [1m[36mTodo Count (0.7ms)[0m  [1m[34mSELECT COUNT(*) FROM "todos"[0m
  ↳ app/graphql/queries/todo_count.rb:7:in `resolve'
Completed 200 OK in 11ms (Views: 0.4ms | ActiveRecord: 0.7ms | Allocations: 1220)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 2807)


Started POST "/graphql" for ::1 at 2023-02-26 16:03:42 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (0.7ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", ""], ["created_at", "2023-02-26 07:03:42.135132"], ["updated_at", "2023-02-26 07:03:42.135132"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (1.1ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 24ms (Views: 0.3ms | ActiveRecord: 2.1ms | Allocations: 2730)


Started POST "/graphql" for ::1 at 2023-02-26 16:03:42 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 5ms (Views: 0.6ms | ActiveRecord: 0.2ms | Allocations: 2923)


Started POST "/graphql" for ::1 at 2023-02-26 16:03:42 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (0.6ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", ""], ["created_at", "2023-02-26 07:03:42.367749"], ["updated_at", "2023-02-26 07:03:42.367749"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (1.1ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 9ms (Views: 0.3ms | ActiveRecord: 1.7ms | Allocations: 2728)


Started POST "/graphql" for ::1 at 2023-02-26 16:03:42 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.5ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.5ms | Allocations: 3042)


Started POST "/graphql" for ::1 at 2023-02-26 16:03:42 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (0.8ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", ""], ["created_at", "2023-02-26 07:03:42.788896"], ["updated_at", "2023-02-26 07:03:42.788896"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (1.1ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.0ms | Allocations: 2729)


Started POST "/graphql" for ::1 at 2023-02-26 16:03:42 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.1ms | Allocations: 3159)


Started POST "/graphql" for ::1 at 2023-02-26 16:03:44 +0900
Started POST "/graphql" for ::1 at 2023-02-26 16:03:44 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}", "graphql"=>{"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}"}}
  [1m[36mTodo Count (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "todos"[0m
  ↳ app/graphql/queries/todo_count.rb:7:in `resolve'
Completed 200 OK in 4ms (Views: 0.1ms | ActiveRecord: 0.1ms | Allocations: 988)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 3ms (Views: 0.5ms | ActiveRecord: 0.1ms | Allocations: 3159)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:08 +0900
Started POST "/graphql" for ::1 at 2023-02-26 16:04:08 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 21ms (Views: 0.4ms | ActiveRecord: 0.1ms | Allocations: 3161)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}", "graphql"=>{"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}"}}
  [1m[36mTodo Count (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "todos"[0m
  ↳ app/graphql/queries/todo_count.rb:7:in `resolve'
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.1ms | Allocations: 978)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:09 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (0.3ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", ""], ["created_at", "2023-02-26 07:04:09.800613"], ["updated_at", "2023-02-26 07:04:09.800613"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (0.6ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 5ms (Views: 0.1ms | ActiveRecord: 0.9ms | Allocations: 2730)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:09 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 3274)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:10 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>""}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (0.3ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", ""], ["created_at", "2023-02-26 07:04:10.347168"], ["updated_at", "2023-02-26 07:04:10.347168"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (0.7ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 5ms (Views: 0.1ms | ActiveRecord: 1.1ms | Allocations: 2729)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:10 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 3ms (Views: 0.5ms | ActiveRecord: 0.2ms | Allocations: 3393)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:11 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"dadad"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"dadad"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (0.8ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "dadad"], ["created_at", "2023-02-26 07:04:11.606110"], ["updated_at", "2023-02-26 07:04:11.606110"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (1.1ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 11ms (Views: 0.5ms | ActiveRecord: 2.1ms | Allocations: 2730)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:11 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 5ms (Views: 0.8ms | ActiveRecord: 0.1ms | Allocations: 3511)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:12 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"18"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"18"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 18], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (1.6ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 18]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 9ms (Views: 0.2ms | ActiveRecord: 1.8ms | Allocations: 1704)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:12 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 7ms (Views: 0.8ms | ActiveRecord: 0.2ms | Allocations: 3393)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:12 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"19"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"19"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 19], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (2.1ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 19]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 8ms (Views: 0.2ms | ActiveRecord: 2.3ms | Allocations: 1703)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:12 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 5ms (Views: 0.5ms | ActiveRecord: 0.2ms | Allocations: 3274)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:12 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"20"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"20"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 20], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (0.9ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 20]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 4ms (Views: 0.1ms | ActiveRecord: 1.0ms | Allocations: 1703)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:13 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 3ms (Views: 0.3ms | ActiveRecord: 0.1ms | Allocations: 3159)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:22 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"dasd"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"dasd"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (0.5ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "dasd"], ["created_at", "2023-02-26 07:04:22.793247"], ["updated_at", "2023-02-26 07:04:22.793247"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (1.0ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 21ms (Views: 0.2ms | ActiveRecord: 1.6ms | Allocations: 2729)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:22 +0900
Started POST "/graphql" for ::1 at 2023-02-26 16:04:22 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 6ms (Views: 0.8ms | ActiveRecord: 0.2ms | Allocations: 3280)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}", "graphql"=>{"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}"}}
  [1m[36mTodo Count (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "todos"[0m
  ↳ app/graphql/queries/todo_count.rb:7:in `resolve'
Completed 200 OK in 3ms (Views: 0.1ms | ActiveRecord: 0.1ms | Allocations: 980)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:23 +0900
Started POST "/graphql" for ::1 at 2023-02-26 16:04:23 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.2ms | Allocations: 3276)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}", "graphql"=>{"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}"}}
  [1m[36mTodo Count (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "todos"[0m
  ↳ app/graphql/queries/todo_count.rb:7:in `resolve'
Completed 200 OK in 1ms (Views: 0.1ms | ActiveRecord: 0.1ms | Allocations: 978)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:25 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"dasdsa"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"dasdsa"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (1.1ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "dasdsa"], ["created_at", "2023-02-26 07:04:25.264046"], ["updated_at", "2023-02-26 07:04:25.264046"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (1.1ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 16ms (Views: 0.2ms | ActiveRecord: 2.4ms | Allocations: 2730)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:25 +0900
Started POST "/graphql" for ::1 at 2023-02-26 16:04:25 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 6ms (Views: 0.4ms | ActiveRecord: 0.2ms | Allocations: 3482)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}", "graphql"=>{"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}"}}
  [1m[36mTodo Count (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "todos"[0m
  ↳ app/graphql/queries/todo_count.rb:7:in `resolve'
Completed 200 OK in 9ms (Views: 0.5ms | ActiveRecord: 1.0ms | Allocations: 1181)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:26 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"21"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"21"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.3ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 21], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (2.2ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 21]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 9ms (Views: 0.2ms | ActiveRecord: 2.5ms | Allocations: 1726)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:26 +0900
Started POST "/graphql" for ::1 at 2023-02-26 16:04:26 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 6ms (Views: 0.7ms | ActiveRecord: 0.2ms | Allocations: 3297)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}", "graphql"=>{"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}"}}
  [1m[36mTodo Count (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "todos"[0m
  ↳ app/graphql/queries/todo_count.rb:7:in `resolve'
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.1ms | Allocations: 980)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:27 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"22"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"22"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 22], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (1.7ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 22]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 8ms (Views: 0.2ms | ActiveRecord: 1.9ms | Allocations: 1703)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:27 +0900
Started POST "/graphql" for ::1 at 2023-02-26 16:04:27 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.1ms | Allocations: 3179)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}", "graphql"=>{"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}"}}
  [1m[36mTodo Count (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "todos"[0m
  ↳ app/graphql/queries/todo_count.rb:7:in `resolve'
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.1ms | Allocations: 978)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:27 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"23"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"23"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 23], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (1.7ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 23]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 8ms (Views: 0.2ms | ActiveRecord: 1.9ms | Allocations: 1703)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:27 +0900
Started POST "/graphql" for ::1 at 2023-02-26 16:04:27 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 5ms (Views: 0.7ms | ActiveRecord: 0.1ms | Allocations: 3047)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}", "graphql"=>{"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}"}}
  [1m[36mTodo Count (0.2ms)[0m  [1m[34mSELECT COUNT(*) FROM "todos"[0m
  ↳ app/graphql/queries/todo_count.rb:7:in `resolve'
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.2ms | Allocations: 978)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:28 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"24"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"24"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 24], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (1.5ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 24]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 8ms (Views: 0.3ms | ActiveRecord: 1.7ms | Allocations: 1703)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:28 +0900
Started POST "/graphql" for ::1 at 2023-02-26 16:04:28 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.2ms | Allocations: 2925)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}", "graphql"=>{"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}"}}
  [1m[36mTodo Count (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "todos"[0m
  ↳ app/graphql/queries/todo_count.rb:7:in `resolve'
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.1ms | Allocations: 978)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:28 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"25"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"25"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 25], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (0.8ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 25]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 3ms (Views: 0.1ms | ActiveRecord: 0.8ms | Allocations: 1703)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:28 +0900
Started POST "/graphql" for ::1 at 2023-02-26 16:04:28 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 2812)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}", "graphql"=>{"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}"}}
  [1m[36mTodo Count (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "todos"[0m
  ↳ app/graphql/queries/todo_count.rb:7:in `resolve'
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.1ms | Allocations: 978)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:28 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"26"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"26"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 26], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (1.8ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 26]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 8ms (Views: 0.2ms | ActiveRecord: 2.0ms | Allocations: 1704)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:28 +0900
Started POST "/graphql" for ::1 at 2023-02-26 16:04:28 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.1ms | Allocations: 2696)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}", "graphql"=>{"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}"}}
  [1m[36mTodo Count (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "todos"[0m
  ↳ app/graphql/queries/todo_count.rb:7:in `resolve'
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.1ms | Allocations: 978)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:50 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"27"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"27"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 27], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (1.1ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 27]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 12ms (Views: 0.3ms | ActiveRecord: 1.3ms | Allocations: 1703)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:50 +0900
Started POST "/graphql" for ::1 at 2023-02-26 16:04:50 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 9ms (Views: 0.4ms | ActiveRecord: 0.1ms | Allocations: 2576)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}", "graphql"=>{"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}"}}
  [1m[36mTodo Count (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "todos"[0m
  ↳ app/graphql/queries/todo_count.rb:7:in `resolve'
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.1ms | Allocations: 978)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:51 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"28"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"28"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.2ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 28], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (1.7ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 28]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 9ms (Views: 0.3ms | ActiveRecord: 1.9ms | Allocations: 1703)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:51 +0900
Started POST "/graphql" for ::1 at 2023-02-26 16:04:51 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 9ms (Views: 0.3ms | ActiveRecord: 0.1ms | Allocations: 2458)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}", "graphql"=>{"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}"}}
  [1m[36mTodo Count (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "todos"[0m
  ↳ app/graphql/queries/todo_count.rb:7:in `resolve'
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.1ms | Allocations: 980)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:51 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"29"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"29"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 29], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (0.9ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 29]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 5ms (Views: 0.1ms | ActiveRecord: 1.1ms | Allocations: 1704)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:51 +0900
Started POST "/graphql" for ::1 at 2023-02-26 16:04:51 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 0.1ms | Allocations: 2339)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}", "graphql"=>{"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}"}}
  [1m[36mTodo Count (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "todos"[0m
  ↳ app/graphql/queries/todo_count.rb:7:in `resolve'
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.1ms | Allocations: 980)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:52 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"30"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"30"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 30], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (0.8ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 30]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 3ms (Views: 0.1ms | ActiveRecord: 0.8ms | Allocations: 1703)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:52 +0900
Started POST "/graphql" for ::1 at 2023-02-26 16:04:52 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 2220)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}", "graphql"=>{"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}"}}
  [1m[36mTodo Count (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "todos"[0m
  ↳ app/graphql/queries/todo_count.rb:7:in `resolve'
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.1ms | Allocations: 978)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:52 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"31"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"31"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 31], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (1.3ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 31]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 1.4ms | Allocations: 1704)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:52 +0900
Started POST "/graphql" for ::1 at 2023-02-26 16:04:52 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 2101)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}", "graphql"=>{"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}"}}
  [1m[36mTodo Count (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "todos"[0m
  ↳ app/graphql/queries/todo_count.rb:7:in `resolve'
Completed 200 OK in 1ms (Views: 0.1ms | ActiveRecord: 0.1ms | Allocations: 978)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:52 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"32"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"32"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 32], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (1.1ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 32]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 5ms (Views: 0.1ms | ActiveRecord: 1.2ms | Allocations: 1704)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:52 +0900
Started POST "/graphql" for ::1 at 2023-02-26 16:04:52 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 1985)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}", "graphql"=>{"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}"}}
  [1m[36mTodo Count (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "todos"[0m
  ↳ app/graphql/queries/todo_count.rb:7:in `resolve'
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.1ms | Allocations: 980)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:52 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"33"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"33"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 33], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (0.9ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 33]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 4ms (Views: 0.1ms | ActiveRecord: 1.0ms | Allocations: 1703)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:52 +0900
Started POST "/graphql" for ::1 at 2023-02-26 16:04:52 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 1867)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}", "graphql"=>{"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}"}}
  [1m[36mTodo Count (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "todos"[0m
  ↳ app/graphql/queries/todo_count.rb:7:in `resolve'
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.1ms | Allocations: 978)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:52 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"deleteTodo", "variables"=>{"id"=>"34"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"deleteTodo", "variables"=>{"id"=>"34"}, "query"=>"mutation deleteTodo($id: ID!) {\n  deleteTodo(input: {id: $id}) {\n    id\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" WHERE "todos"."id" = ? LIMIT ?[0m  [["id", 34], ["LIMIT", 1]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
  [1m[36mTodo Destroy (0.8ms)[0m  [1m[31mDELETE FROM "todos" WHERE "todos"."id" = ?[0m  [["id", 34]]
  ↳ app/graphql/mutations/delete_todo.rb:7:in `resolve'
Completed 200 OK in 4ms (Views: 0.1ms | ActiveRecord: 0.9ms | Allocations: 1703)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:52 +0900
Started POST "/graphql" for ::1 at 2023-02-26 16:04:52 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 1749)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}", "graphql"=>{"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}"}}
  [1m[36mTodo Count (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "todos"[0m
  ↳ app/graphql/queries/todo_count.rb:7:in `resolve'
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.1ms | Allocations: 978)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:54 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"dasd"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"createTodo", "variables"=>{"params"=>{"title"=>"dasd"}}, "query"=>"mutation createTodo($params: TodoAttributes!) {\n  createTodo(input: {params: $params}) {\n    todo {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n}"}}
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTodo Create (0.8ms)[0m  [1m[32mINSERT INTO "todos" ("title", "created_at", "updated_at") VALUES (?, ?, ?)[0m  [["title", "dasd"], ["created_at", "2023-02-26 07:04:54.691535"], ["updated_at", "2023-02-26 07:04:54.691535"]]
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
  [1m[36mTRANSACTION (0.9ms)[0m  [1m[36mcommit transaction[0m
  ↳ app/graphql/mutations/create_todo.rb:11:in `resolve'
Completed 200 OK in 11ms (Views: 0.1ms | ActiveRecord: 1.8ms | Allocations: 2730)


Started POST "/graphql" for ::1 at 2023-02-26 16:04:54 +0900
Started POST "/graphql" for ::1 at 2023-02-26 16:04:54 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.1ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.1ms | Allocations: 1869)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}", "graphql"=>{"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}"}}
  [1m[36mTodo Count (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "todos"[0m
  ↳ app/graphql/queries/todo_count.rb:7:in `resolve'
Completed 200 OK in 2ms (Views: 0.4ms | ActiveRecord: 0.1ms | Allocations: 978)


Started POST "/graphql" for ::1 at 2023-02-26 16:10:22 +0900
Started POST "/graphql" for ::1 at 2023-02-26 16:10:22 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}", "graphql"=>{"operationName"=>"todos", "variables"=>{}, "query"=>"query todos {\n  todos {\n    id\n    title\n    updatedAt\n    __typename\n  }\n}"}}
  [1m[36mTodo Load (0.6ms)[0m  [1m[34mSELECT "todos".* FROM "todos" ORDER BY "todos"."id" ASC[0m
Completed 200 OK in 12ms (Views: 2.7ms | ActiveRecord: 0.8ms | Allocations: 2000)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}", "graphql"=>{"operationName"=>"todo_count", "variables"=>{}, "query"=>"query todo_count {\n  todoCount\n}"}}
  [1m[36mTodo Count (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "todos"[0m
  ↳ app/graphql/queries/todo_count.rb:7:in `resolve'
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.1ms | Allocations: 978)


